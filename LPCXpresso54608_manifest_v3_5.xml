<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_LPCXpresso54608" name="LPCXpresso54608" brief="This is SDK version 2.6.0 manifest file. It describes the content of the LPCXpresso54608 and additional settings for tools that support SDK version 2.6.0" format_version="3.5" api_version="2.0.0" configuration="ea378e5d3467fe70111d7a527dd9d6f9" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.5.xsd">
  <!--Timestamp (UTC): 2019-06-18 23:28:22.558183-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso260" name="MCUXpresso260" version="2.6.0" revision="228 2019-06-14"/>
  <compilers>
    <compiler id="compiler_armcc" name="armcc" type="armcc"/>
  </compilers>
  <toolchainSettings/>
  <toolchains>
    <toolchain id="mdk" name="Keil_MDK" version="5.27" full_name="Keil MDK" compiler="compiler_armcc" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
  </toolchains>
  <boards>
    <board id="lpcxpresso54608" name="LPCXpresso54608" href="http://www.nxp.com/products/:OM13092" version="1.0.0" package="LPC54608J512ET180">
      <description>The LPCXpresso54608 is an development platform for LPC54605, LPC54606, LPC54607,LPC54608 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="LPCXpresso54608.gif"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The LPCXpresso family of boards provides a powerful and flexible development system for NXP®'s Cortex-M MCUs. The LPCXpresso54608 board has been developed by NXP to enable evaluation of and prototyping with the LPC54600 family of MCUs and its low power features make it as easy as possible to get started with your project. LPCXpresso™ is a low-cost development platform available from NXP supporting NXP's ARM-based microcontrollers. The platform is comprised of a simplified Eclipse-based IDE and low-cost target boards which include an attached JTAG debugger. LPCXpresso is an end-to-end solution enabling embedded engineers to develop their applications from initial evaluation to final production.</content>
          </specific>
        </metadata>
      </metadataSet>
      <memory>
        <memoryBlock id="BOARD_FLASH_lpcxpresso54608" name="BOARD_FLASH" addr="10000000" size="01000000" type="SPIFI" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_lpcxpresso54608" name="BOARD_SDRAM" addr="a0000000" size="01000000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="16384" ram_size_kb="16384"/>
      <examples>
        <example id="lpcxpresso54608_aws_device_configuration_enet" name="aws_device_configuration_enet" brief="This example demonstrates how the aws iot device can be configured by mobile application." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/device_configuration_enet">
          <external path="boards/lpcxpresso54608/aws_examples/device_configuration_enet" type="xml">
            <files mask="aws_device_configuration_enet.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_device_configuration_wifi" name="aws_device_configuration_wifi" brief="This example demonstrates how the aws iot device can be configured by mobile application." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/device_configuration_wifi">
          <external path="boards/lpcxpresso54608/aws_examples/device_configuration_wifi" type="xml">
            <files mask="aws_device_configuration_wifi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_greengrass_discovery_enet" name="aws_greengrass_discovery_enet" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/greengrass_discovery_enet">
          <external path="boards/lpcxpresso54608/aws_examples/greengrass_discovery_enet" type="xml">
            <files mask="aws_greengrass_discovery_enet.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_greengrass_discovery_wifi" name="aws_greengrass_discovery_wifi" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/greengrass_discovery_wifi">
          <external path="boards/lpcxpresso54608/aws_examples/greengrass_discovery_wifi" type="xml">
            <files mask="aws_greengrass_discovery_wifi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_remote_control_enet" name="aws_remote_control_enet" brief="This example demonstrates how the board can be controlled by Android mobile application with usage the AWS IoT. User LEDs on the board can be controlled and also an action can be invoked to read data from accelerometer and report it to AWS IoT device shadow." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/remote_control_enet">
          <external path="boards/lpcxpresso54608/aws_examples/remote_control_enet" type="xml">
            <files mask="aws_remote_control_enet.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_remote_control_wifi" name="aws_remote_control_wifi" brief="This example demonstrates how the board can be controlled by Android mobile application with usage the AWS IoT. User LEDs on the board can be controlled and also an action can be invoked to read data from accelerometer and report it to AWS IoT device shadow." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/remote_control_wifi">
          <external path="boards/lpcxpresso54608/aws_examples/remote_control_wifi" type="xml">
            <files mask="aws_remote_control_wifi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_shadow_enet" name="aws_shadow_enet" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/shadow_enet">
          <external path="boards/lpcxpresso54608/aws_examples/shadow_enet" type="xml">
            <files mask="aws_shadow_enet.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_aws_shadow_wifi" name="aws_shadow_wifi" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="mdk" compiler="compiler_armcc" category="aws_examples" path="boards/lpcxpresso54608/aws_examples/shadow_wifi">
          <external path="boards/lpcxpresso54608/aws_examples/shadow_wifi" type="xml">
            <files mask="aws_shadow_wifi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_i2c_dma_b2b_transfer_master" name="cmsis_i2c_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_i2c_dma_b2b_transfer_slave" name="cmsis_i2c_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_spi_dma_b2b_transfer_master" name="cmsis_spi_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_master example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54608/cmsis_driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_spi_dma_b2b_transfer_slave" name="cmsis_spi_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_slave example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54608/cmsis_driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_spi_int_b2b_transfer_master" name="cmsis_spi_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_master example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54608/cmsis_driver_examples/spi/int_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/spi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_spi_int_b2b_transfer_slave" name="cmsis_spi_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_slave example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54608/cmsis_driver_examples/spi/int_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/spi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_usart_dma_transfer" name="cmsis_usart_dma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/usart" path="boards/lpcxpresso54608/cmsis_driver_examples/usart/dma_transfer">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/usart/dma_transfer" type="xml">
            <files mask="cmsis_usart_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_cmsis_usart_interrupt_transfer" name="cmsis_usart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mdk" compiler="compiler_armcc" category="cmsis_driver_examples/usart" path="boards/lpcxpresso54608/cmsis_driver_examples/usart/interrupt_transfer">
          <external path="boards/lpcxpresso54608/cmsis_driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="cmsis_usart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/crc">
          <external path="boards/lpcxpresso54608/driver_examples/crc" type="xml">
            <files mask="crc.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_ctimer_match_example" name="ctimer_match_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/ctimer" path="boards/lpcxpresso54608/driver_examples/ctimer/simple_match">
          <external path="boards/lpcxpresso54608/driver_examples/ctimer/simple_match" type="xml">
            <files mask="ctimer_match_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_ctimer_match_interrupt_example" name="ctimer_match_interrupt_example" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/ctimer" path="boards/lpcxpresso54608/driver_examples/ctimer/simple_match_interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/ctimer/simple_match_interrupt" type="xml">
            <files mask="ctimer_match_interrupt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_ctimer_pwm_example" name="ctimer_pwm_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/ctimer" path="boards/lpcxpresso54608/driver_examples/ctimer/simple_pwm">
          <external path="boards/lpcxpresso54608/driver_examples/ctimer/simple_pwm" type="xml">
            <files mask="ctimer_pwm_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_ctimer_pwm_interrupt_example" name="ctimer_pwm_interrupt_example" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/ctimer" path="boards/lpcxpresso54608/driver_examples/ctimer/simple_pwm_interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/ctimer/simple_pwm_interrupt" type="xml">
            <files mask="ctimer_pwm_interrupt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_speaker_bm" name="dev_audio_speaker_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_speaker_freertos" name="dev_audio_speaker_freertos" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker/freertos" type="xml">
            <files mask="dev_audio_speaker_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_audio_speaker_lite_bm" name="dev_audio_speaker_lite_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vnic_bm" name="dev_cdc_vnic_bm" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic/bm" type="xml">
            <files mask="dev_cdc_vnic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vnic_freertos" name="dev_cdc_vnic_freertos" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic/freertos" type="xml">
            <files mask="dev_cdc_vnic_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_cdc_vnic_lite_bm" name="dev_cdc_vnic_lite_bm" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_cdc_vnic_lite/bm" type="xml">
            <files mask="dev_cdc_vnic_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_sdcard_bm" name="dev_composite_cdc_msc_sdcard_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_sdcard_freertos" name="dev_composite_cdc_msc_sdcard_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_msc_sdcard_lite_bm" name="dev_composite_cdc_msc_sdcard_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_audio_unified_bm" name="dev_composite_hid_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_audio_unified_freertos" name="dev_composite_hid_audio_unified_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified/freertos" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_audio_unified_lite_bm" name="dev_composite_hid_audio_unified_lite_bm" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_dfu_bm" name="dev_dfu_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_dfu/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_dfu/bm" type="xml">
            <files mask="dev_dfu_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_dfu_freertos" name="dev_dfu_freertos" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_dfu/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_dfu/freertos" type="xml">
            <files mask="dev_dfu_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_dfu_lite_bm" name="dev_dfu_lite_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_dfu_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_dfu_lite/bm" type="xml">
            <files mask="dev_dfu_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_mouse_freertos_static" name="dev_hid_mouse_freertos_static" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/freertos_static">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse/freertos_static" type="xml">
            <files mask="dev_hid_mouse_freertos_static.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_lpm_hid_mouse_bm" name="dev_lpm_hid_mouse_bm" brief="This is one example support LPM(Link Power Management)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_lpm_hid_mouse_freertos" name="dev_lpm_hid_mouse_freertos" brief="This is one example support LPM(Link Power Management)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse/freertos" type="xml">
            <files mask="dev_lpm_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_lpm_hid_mouse_lite_bm" name="dev_lpm_hid_mouse_lite_bm" brief="This is one example support LPM(Link Power Management)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_lpm_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_sdcard_bm" name="dev_msc_sdcard_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard/bm" type="xml">
            <files mask="dev_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_sdcard_freertos" name="dev_msc_sdcard_freertos" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard/freertos" type="xml">
            <files mask="dev_msc_sdcard_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_msc_sdcard_lite_bm" name="dev_msc_sdcard_lite_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dma_channel_chain" name="dma_channel_chain" brief="The DMA channel chain example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the DMA channel chain feature." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dma" path="boards/lpcxpresso54608/driver_examples/dma/channel_chain">
          <external path="boards/lpcxpresso54608/driver_examples/dma/channel_chain" type="xml">
            <files mask="dma_channel_chain.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dma_interleave_transfer" name="dma_interleave_transfer" brief="The DMA interleave transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA interleave feature." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dma" path="boards/lpcxpresso54608/driver_examples/dma/interleave_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/dma/interleave_transfer" type="xml">
            <files mask="dma_interleave_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dma_linked_transfer" name="dma_linked_transfer" brief="The DMA linked transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a linked trnasfer example." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dma" path="boards/lpcxpresso54608/driver_examples/dma/linked_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/dma/linked_transfer" type="xml">
            <files mask="dma_linked_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dma" path="boards/lpcxpresso54608/driver_examples/dma/memory_to_memory">
          <external path="boards/lpcxpresso54608/driver_examples/dma/memory_to_memory" type="xml">
            <files mask="dma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dma_wrap_transfer" name="dma_wrap_transfer" brief="The DMA wrap transfer example is a simple demonstration program that uses the SDK software.It executes a wrap transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA wrap feature." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dma" path="boards/lpcxpresso54608/driver_examples/dma/wrap_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/dma/wrap_transfer" type="xml">
            <files mask="dma_wrap_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dmic_dma" name="dmic_dma" brief="This example shows how to use DMA to transfer data from DMIC to memory." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dmic" path="boards/lpcxpresso54608/driver_examples/dmic/dmic_dma">
          <external path="boards/lpcxpresso54608/driver_examples/dmic/dmic_dma" type="xml">
            <files mask="dmic_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_dmic_i2s_dma" name="dmic_i2s_dma" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="mdk" compiler="compiler_armcc" category="driver_examples/dmic" path="boards/lpcxpresso54608/driver_examples/dmic/dmic_i2s_dma">
          <external path="boards/lpcxpresso54608/driver_examples/dmic/dmic_i2s_dma" type="xml">
            <files mask="dmic_i2s_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_eeprom" name="eeprom" brief="The EEPROM Example project is a demonstration program that uses the KSDK software to program eeprom memoryand verify the program." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/eeprom">
          <external path="boards/lpcxpresso54608/driver_examples/eeprom" type="xml">
            <files mask="eeprom.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_emc_sdram" name="emc_sdram" brief="The emc_sdram example shows how to access the SDRAM.In this example, user shall initialize the EMC (external memory controller), initialize theEMC dynamic memory controller before access the external SDRAM.If the sdram example fails, please make sure to check the following points:1. Please take refer to the board.readme to check the jumper settings on your board.2. Please take refer to the EMC chapter in API RM to do the delay calibration to found the best delay for your board, then update the delay to the EMC clock delay control registers in the system configure module registers." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/emc" path="boards/lpcxpresso54608/driver_examples/emc/sdram">
          <external path="boards/lpcxpresso54608/driver_examples/emc/sdram" type="xml">
            <files mask="emc_sdram.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_emwin_serial_terminal" name="emwin_serial_terminal" brief="The serial_terminal demo shows how to use emWin library to render text. Connect using serial terminal application to debug console and type text.Please note that this example does not make use of receive buffer thus this example cannot handle larger amout of text pasted to the terminal at a time." toolchain="mdk" compiler="compiler_armcc" category="emwin_examples" path="boards/lpcxpresso54608/emwin_examples/emwin_serial_terminal">
          <external path="boards/lpcxpresso54608/emwin_examples/emwin_serial_terminal" type="xml">
            <files mask="emwin_serial_terminal.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_emwin_slide_show" name="emwin_slide_show" brief="The example demonstrates graphical widgets of the emWin library." toolchain="mdk" compiler="compiler_armcc" category="emwin_examples" path="boards/lpcxpresso54608/emwin_examples/emwin_slide_show">
          <external path="boards/lpcxpresso54608/emwin_examples/emwin_slide_show" type="xml">
            <files mask="emwin_slide_show.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_emwin_temperature_control" name="emwin_temperature_control" brief="The example demonstrates graphical widgets of the emWin library." toolchain="mdk" compiler="compiler_armcc" category="emwin_examples" path="boards/lpcxpresso54608/emwin_examples/emwin_temperature_control">
          <external path="boards/lpcxpresso54608/emwin_examples/emwin_temperature_control" type="xml">
            <files mask="emwin_temperature_control.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588_transfer example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="mdk" compiler="compiler_armcc" category="driver_examples/enet" path="boards/lpcxpresso54608/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_enet_txrx_rxinterrupt" name="enet_txrx_rxinterrupt" brief="The enet_rxtx_rxinterrupt example shows the simplest way to use ENET functional tx/rx API for simple frame receive and transmit.1. This example shows how to initialize the ENET.2. How to use ENET to receive frame in interrupt irq handler and to transmit frame.The example transmits 20 number broadcast frame, print the number of recieved frames. To avoidthe receive number overflow, the transmit/receive loop with automatically break when 20 numberare received." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/enet" path="boards/lpcxpresso54608/driver_examples/enet/txrx_rxinterrupt">
          <external path="boards/lpcxpresso54608/driver_examples/enet/txrx_rxinterrupt" type="xml">
            <files mask="enet_txrx_rxinterrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_enet_txrx_rxpoll" name="enet_txrx_rxpoll" brief="The enet_rxtx_rxinterrupt example shows the simplest way to use ENET functional tx/rx API for simple frame receive and transmit.1. This example shows how to initialize the ENET.2. How to use ENET to receive frame in polling and to transmit frame.The example transmits 20 number broadcast frame, print the number and the mac address of the recieved frames." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/enet" path="boards/lpcxpresso54608/driver_examples/enet/txrx_rxpoll">
          <external path="boards/lpcxpresso54608/driver_examples/enet/txrx_rxpoll" type="xml">
            <files mask="enet_txrx_rxpoll.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_enet_txrx_transfer_rxinterrupt" name="enet_txrx_transfer_rxinterrupt" brief="The enet_rxtx_rxinterrupt example shows the simplest way to use ENET transactional tx/rx API for simple frame receive and transmit.1. This example shows how to initialize the ENET.2. How to use ENET to receive frame in interrupt irq handler and to transmit frame.The example transmits 20 number broadcast frame, print the number of recieved frames. To avoidthe receive number overflow, the transmit/receive loop with automatically break when 20 numberare received." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/enet" path="boards/lpcxpresso54608/driver_examples/enet/txrx_transfer_rxinterrupt">
          <external path="boards/lpcxpresso54608/driver_examples/enet/txrx_transfer_rxinterrupt" type="xml">
            <files mask="enet_txrx_transfer_rxinterrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_enet_txrx_transfer_rxpoll" name="enet_txrx_transfer_rxpoll" brief="The enet_rxtx_rxinterrupt example shows the simplest way to use ENET transactional tx/rx API for simple frame receive and transmit.1. This example shows how to initialize the ENET.2. How to use ENET to receive frame in polling and to transmit frame.The example transmits 20 number broadcast frame, print the number and the mac address of the recieved frames." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/enet" path="boards/lpcxpresso54608/driver_examples/enet/txrx_transfer_rxpoll">
          <external path="boards/lpcxpresso54608/driver_examples/enet/txrx_transfer_rxpoll" type="xml">
            <files mask="enet_txrx_transfer_rxpoll.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_fatfs_mmccard" name="fatfs_mmccard" brief="The MMCCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a MMC card then does &quot;creat directory/read directory/create file/write file/read file&quot; operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to letcard driver has different performance. The purpose of this example is to show how to use MMCCARD driver based FATFS disk in SDK software.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="mdk" compiler="compiler_armcc" category="fatfs_examples/fatfs_mmccard" path="boards/lpcxpresso54608/fatfs_examples/fatfs_mmccard">
          <external path="boards/lpcxpresso54608/fatfs_examples/fatfs_mmccard" type="xml">
            <files mask="fatfs_mmccard.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_fatfs_sdcard" name="fatfs_sdcard" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="mdk" compiler="compiler_armcc" category="fatfs_examples/fatfs_sdcard" path="boards/lpcxpresso54608/fatfs_examples/fatfs_sdcard">
          <external path="boards/lpcxpresso54608/fatfs_examples/fatfs_sdcard" type="xml">
            <files mask="fatfs_sdcard.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_flash_component_nor_spifi" name="flash_component_nor_spifi" brief="The nor flash demo application demonstrates the use of nor flash component to erase, program, and read an external flash device." toolchain="mdk" compiler="compiler_armcc" category="demo_apps/flash_component/spifi/nor_flash" path="boards/lpcxpresso54608/demo_apps/flash_component/spifi/nor_flash">
          <external path="boards/lpcxpresso54608/demo_apps/flash_component/spifi/nor_flash" type="xml">
            <files mask="flash_component_nor_spifi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_flashiap" name="flashiap" brief="The FLASIAP project is a simple demonstration program of the SDK FLASIAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/flashiap">
          <external path="boards/lpcxpresso54608/driver_examples/flashiap" type="xml">
            <files mask="flashiap.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_fmc_signature_generation" name="fmc_signature_generation" brief="The fmc example project is a demonstration program that uses the KSDK software to generate flash signaturefor a specified flash address range and prints them to the terminal. This example also implements the softwaresignature algorithm, compares the hardware signature result and software signature result. This is to verify flash contents as suggested by user manual." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/fmc" path="boards/lpcxpresso54608/driver_examples/fmc/signature_generation">
          <external path="boards/lpcxpresso54608/driver_examples/fmc/signature_generation" type="xml">
            <files mask="fmc_signature_generation.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_fmeas" name="fmeas" brief="This example shows how to use SDK drivers to use the Frequency Measure feature of SYSCON module on LPC devices.It shows how to measure a target frequency using a (faster) reference frequency. The example uses the internal main clock as the reference frequency to measure the frequencies of the RTC, watchdog oscillator, and internal RC oscillator." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/fmeas">
          <external path="boards/lpcxpresso54608/driver_examples/fmeas" type="xml">
            <files mask="fmeas.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_event">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_generic">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_hello">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards\&lt;board&gt;\rtos_examples\freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_i2c">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_i2c" type="xml">
            <files mask="freertos_i2c.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_mmccard" name="freertos_mmccard" brief="The MMCCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driverwith FreeRTOS in SDK software to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="mdk" compiler="compiler_armcc" category="rtos_examples/freertos_mmccard" path="boards/lpcxpresso54608/rtos_examples/freertos_mmccard">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_mmccard" type="xml">
            <files mask="freertos_mmccard.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_mutex">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_queue">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_sdcard" name="freertos_sdcard" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples/freertos_sdcard" path="boards/lpcxpresso54608/rtos_examples/freertos_sdcard">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_sdcard" type="xml">
            <files mask="freertos_sdcard.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_sem">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_spi" name="freertos_spi" brief="The freertos_spi example shows how to use SPI driver in FreeRTOS:In this example , one spi instance is used as SPI master with blocking and another spi instance is used as SPI slave.1. SPI master sends/receives data using task blocking calls to/from SPI slave. (SPI Slave uses interrupt to receive/sendthe data)" toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_spi">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_spi" type="xml">
            <files mask="freertos_spi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer’s callback SwTimerCallback isperiodically executed and text “Tick.” is printed to terminal." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_swtimer">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then&#10;it is waked up by expired time delay that using RTC module or occur any a hardware interrupt.&#10;&#10;" toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_tickless">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_freertos_usart" name="freertos_usart" brief="The USART example for FreeRTOS demonstrates the possibility to use the USART driver in the RTOS.The example uses single instance of USART IP and writes string into, then reads back chars.After every 4B received, these are sent back on USART." toolchain="mdk" compiler="compiler_armcc" category="rtos_examples" path="boards/lpcxpresso54608/rtos_examples/freertos_usart">
          <external path="boards/lpcxpresso54608/rtos_examples/freertos_usart" type="xml">
            <files mask="freertos_usart.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_gint" name="gint" brief="This example shows how to use SDK drivers to use the Group GPIO input interrupt peripheral." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/gint">
          <external path="boards/lpcxpresso54608/driver_examples/gint" type="xml">
            <files mask="gint.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/gpio" path="boards/lpcxpresso54608/driver_examples/gpio/led_output">
          <external path="boards/lpcxpresso54608/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/hello_world">
          <external path="boards/lpcxpresso54608/demo_apps/hello_world" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_hello_world_swo" name="hello_world_swo" brief="The Hello World SWO demo prints the &quot;SWO: Hello World&quot; string to the SWO viewer. The purpose of this demo is to show how to use the swo, and to provide a simple project for debugging and further development." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/hello_world_swo">
          <external path="boards/lpcxpresso54608/demo_apps/hello_world_swo" type="xml">
            <files mask="hello_world_swo.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_hello_world_virtual_com" name="hello_world_virtual_com" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/hello_world_virtual_com">
          <external path="boards/lpcxpresso54608/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_audio_speaker_bm" name="host_audio_speaker_bm" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_audio_speaker_freertos" name="host_audio_speaker_freertos" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_audio_speaker/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_audio_speaker/freertos" type="xml">
            <files mask="host_audio_speaker_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_cdc_bm" name="host_cdc_bm" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_cdc/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_cdc_freertos" name="host_cdc_freertos" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_cdc/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_cdc/freertos" type="xml">
            <files mask="host_cdc_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_generic_bm" name="host_hid_generic_bm" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_generic_freertos" name="host_hid_generic_freertos" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_generic/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_generic/freertos" type="xml">
            <files mask="host_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_mouse_bm" name="host_hid_mouse_bm" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_mouse_freertos" name="host_hid_mouse_freertos" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse/freertos" type="xml">
            <files mask="host_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_mouse_keyboard_bm" name="host_hid_mouse_keyboard_bm" brief="This example supports the mouse device and the keyboard device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_hid_mouse_keyboard_freertos" name="host_hid_mouse_keyboard_freertos" brief="This example supports the mouse device and the keyboard device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse_keyboard/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_hid_mouse_keyboard/freertos" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_lpm_hid_mouse_bm" name="host_lpm_hid_mouse_bm" brief="This is one example support LPM(Link Power Management)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_lpm_host_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_lpm_host_hid_mouse/bm" type="xml">
            <files mask="host_lpm_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_lpm_hid_mouse_freertos" name="host_lpm_hid_mouse_freertos" brief="This is one example demo support LPM(Link Power Management)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_lpm_host_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_lpm_host_hid_mouse/freertos" type="xml">
            <files mask="host_lpm_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_msd_command_bm" name="host_msd_command_bm" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_msd_command/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_msd_command_freertos" name="host_msd_command_freertos" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_msd_command/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_msd_command/freertos" type="xml">
            <files mask="host_msd_command_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_msd_fatfs_bm" name="host_msd_fatfs_bm" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_msd_fatfs/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_msd_fatfs/bm" type="xml">
            <files mask="host_msd_fatfs_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_msd_fatfs_freertos" name="host_msd_fatfs_freertos" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_msd_fatfs/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_msd_fatfs/freertos" type="xml">
            <files mask="host_msd_fatfs_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_phdc_manager_bm" name="host_phdc_manager_bm" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_phdc_manager_freertos" name="host_phdc_manager_freertos" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_phdc_manager/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_phdc_manager/freertos" type="xml">
            <files mask="host_phdc_manager_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_printer_plain_text_bm" name="host_printer_plain_text_bm" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_printer_plain_text_freertos" name="host_printer_plain_text_freertos" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_host_printer_plain_text/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_host_printer_plain_text/freertos" type="xml">
            <files mask="host_printer_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_suspend_resume_hid_mouse_bm" name="host_suspend_resume_hid_mouse_bm" brief="This is one example support suspend/resume." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_host_suspend_resume_hid_mouse_freertos" name="host_suspend_resume_hid_mouse_freertos" brief="This is one example support suspend/resume." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_host_hid_mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_suspend_resume_host_hid_mouse/freertos" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="i2c_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_polling_b2b_transfer_master" name="i2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="i2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2c_polling_b2b_transfer_slave" name="i2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2c" path="boards/lpcxpresso54608/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="i2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2s_dma_transfer" name="i2s_dma_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2s" path="boards/lpcxpresso54608/driver_examples/i2s/dma_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/i2s/dma_transfer" type="xml">
            <files mask="i2s_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_i2s_interrupt_transfer" name="i2s_interrupt_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/i2s" path="boards/lpcxpresso54608/driver_examples/i2s/interrupt_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/i2s/interrupt_transfer" type="xml">
            <files mask="i2s_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_iap_basic" name="iap_basic" brief="The IAP project is a simple demonstration program of the SDK IAP driver. It reads part id, boot code version, unique id and reinvoke ISP. A message a printed on the UART terminal as various bascial iap operations are performed." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/iap/iap_basic">
          <external path="boards/lpcxpresso54608/driver_examples/iap/iap_basic" type="xml">
            <files mask="iap_basic.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_iap_eeprom" name="iap_eeprom" brief="The IAP EEPROM project is a simple demonstration program of the SDK IAP driver. It writes and reads the EEPROM page. A message a printed on the UART terminal as EEPROM read and write operations are performed." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/iap/iap_eeprom">
          <external path="boards/lpcxpresso54608/driver_examples/iap/iap_eeprom" type="xml">
            <files mask="iap_eeprom.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_iap_flash" name="iap_flash" brief="The IAP Flash project is a simple demonstration program of the SDK IAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/iap/iap_flash">
          <external path="boards/lpcxpresso54608/driver_examples/iap/iap_flash" type="xml">
            <files mask="iap_flash.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_keyboard2mouse_bm" name="keyboard2mouse_bm" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_keyboard2mouse/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_keyboard2mouse/bm" type="xml">
            <files mask="keyboard2mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_keyboard2mouse_freertos" name="keyboard2mouse_freertos" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_keyboard2mouse/freertos">
          <external path="boards/lpcxpresso54608/usb_examples/usb_keyboard2mouse/freertos" type="xml">
            <files mask="keyboard2mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lcdc_cursor" name="lcdc_cursor" brief="The lcdc_cursor example shows how to use LCD hardware cursor.In this example, a 32x32 cursor is shown. The cursor's position is changed atthe end of every frame.The background is:+------------------------------------------------++                                                ++                    Red                         ++                                                ++            +--------------------+              ++            +                    +              ++            +      Blank         +              ++            +                    +              ++            +--------------------+              ++                                                ++                                                ++                                                ++------------------------------------------------+" toolchain="mdk" compiler="compiler_armcc" category="driver_examples/lcdc" path="boards/lpcxpresso54608/driver_examples/lcdc/lcdc_cursor">
          <external path="boards/lpcxpresso54608/driver_examples/lcdc/lcdc_cursor" type="xml">
            <files mask="lcdc_cursor.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lcdc_tft" name="lcdc_tft" brief="The lcdc_tft example shows how to use LCD driver to drive TFT panel.In this example, the cursor palette is used. A rectangle is shown in the panel,its color and position are changed every frame." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/lcdc" path="boards/lpcxpresso54608/driver_examples/lcdc/lcdc_tft">
          <external path="boards/lpcxpresso54608/driver_examples/lcdc/lcdc_tft" type="xml">
            <files mask="lcdc_tft.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/led_blinky">
          <external path="boards/lpcxpresso54608/demo_apps/led_blinky" type="xml">
            <files mask="led_blinky.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_led_control_bm" name="led_control_bm" brief="The LED demo is used to demonstrate how to use new components. The main function of the demo is to control the led by using the shell or button. For shell, please enter \&quot;help\&quot; to get the help information firstly. Turn on LED by using command \&quot;led on\&quot;. And turn off LED by using command \&quot;led off\&quot;. For button, please press the corresponding button to control LED. Turn on LED when the button is pressed with long press or double click event. And turn off LED when the button is pressed with short press or one click event." toolchain="mdk" compiler="compiler_armcc" category="component_examples_lpc" path="boards/lpcxpresso54608/component_examples/led_control/bm">
          <external path="boards/lpcxpresso54608/component_examples/led_control/bm" type="xml">
            <files mask="led_control_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_led_control_freertos" name="led_control_freertos" brief="The LED demo is used to demonstrate how to use new components. The main function of the demo is to control the led by using the shell or button. For shell, please enter \&quot;help\&quot; to get the help information firstly. Turn on LED by using command \&quot;led on\&quot;. And turn off LED by using command \&quot;led off\&quot;. For button, please press the corresponding button to control LED. Turn on LED when the button is pressed with long press or double click event. And turn off LED when the button is pressed with short press or one click event." toolchain="mdk" compiler="compiler_armcc" category="component_examples_lpc" path="boards/lpcxpresso54608/component_examples/led_control/freertos">
          <external path="boards/lpcxpresso54608/component_examples/led_control/freertos" type="xml">
            <files mask="led_control_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lpc_adc_basic" name="lpc_adc_basic" brief="The lpc_adc_basic example shows how to use LPC ADC driver in the simplest way.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the conversion sequence A's flag till the conversion is completed. When the conversion is completed, just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.  Program Flow1.This example demonstrates how to configure the A sequences with polling, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.    3.After ADC channels are assigned to each of the sequences, the software trigger is chosen. Setting   SEQA_CTRL_START to '1' will trigger sequence A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start. 5.Read the corresponding DATAVALID field with polling to judge whether the conversion completes and the result is ready.  If the result is ready, the example will printf result information to terminal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/adc" path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_basic">
          <external path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_basic" type="xml">
            <files mask="lpc_adc_basic.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lpc_adc_burst" name="lpc_adc_burst" brief="The lpc_adc_burst example shows how to use LPC ADC driver with the burst mode.In this example, the internal temperature sensor is used to created the input analog signal.When user type in any key from the keyboard, the burst mode is enabled. Then the conversion sequence A would be started automatically, till the burst would be disabled in conversion completed ISR. Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above.       2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored. (In this example, we use this way.)         3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with burst mode, you can configure channel via   &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, burst mode will start.    5.When the first conversion completes, the interrupt would be triggered. The ISR will stop the burst mode and print conversion result   to terminal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/adc" path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_burst">
          <external path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_burst" type="xml">
            <files mask="lpc_adc_burst.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lpc_adc_dma" name="lpc_adc_dma" brief="The lpc_adc_dma example shows how to use LPC ADC driver with DMA.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. When the ADC conversion is completed, it would trigger the DMA to move the ADC conversion result from ADC conversion data register to user indicated memory. Then the main loop waits for the transfer to be done and print the result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. How to use DMA to work with ADC?   The sequence-A or sequence-B conversion/sequence-complete interrupts may also be   used to generate a DMA trigger. To trigger a DMA transfer, the same conditions must be   met as the conditions for generating an interrupt.   Remark: If the DMA is used, the ADC interrupt must be disabled in the NVIC.   Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Configure the DMA and DMAMUX to work with ADC sequences.4.Enable the Conversion-Complete or Sequence-Complete DMA for sequences A.  5.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    6.When the conversion completes, the DMA would be requested.7.When the DMA transfer completes, DMA will trigger a interrupt. ISR would set the &quot;bDmaTransferDone&quot; to 'true'. Then main function will   print conversion result to terminal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/adc" path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_dma">
          <external path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_dma" type="xml">
            <files mask="lpc_adc_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lpc_adc_interrupt" name="lpc_adc_interrupt" brief="The lpc_adc_interrupt example shows how to use interrupt with LPC ADC driver.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the flag variable which would be asserted when the conversion completed ISR is executed. Then just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    5.When the conversion completes, the interrupt would be triggered. The ISR will print conversion result to terminal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/adc" path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/adc/lpc_adc_interrupt" type="xml">
            <files mask="lpc_adc_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_dhcp_bm" name="lwip_dhcp_bm" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp/bm" type="xml">
            <files mask="lwip_dhcp_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_dhcp_freertos" name="lwip_dhcp_freertos" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp/freertos" type="xml">
            <files mask="lwip_dhcp_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_dhcp_usb_bm" name="lwip_dhcp_usb_bm" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp_usb/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp_usb/bm" type="xml">
            <files mask="lwip_dhcp_usb_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_dhcp_usb_freertos" name="lwip_dhcp_usb_freertos" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp_usb/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_dhcp_usb/freertos" type="xml">
            <files mask="lwip_dhcp_usb_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_httpsrv_bm" name="lwip_httpsrv_bm" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_httpsrv/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_httpsrv/bm" type="xml">
            <files mask="lwip_httpsrv_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_httpsrv_freertos" name="lwip_httpsrv_freertos" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_httpsrv/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_httpsrv/freertos" type="xml">
            <files mask="lwip_httpsrv_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_iperf_bm" name="lwip_iperf_bm" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_iperf/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_iperf/bm" type="xml">
            <files mask="lwip_iperf_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_mqtt_freertos" name="lwip_mqtt_freertos" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_mqtt/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_mqtt/freertos" type="xml">
            <files mask="lwip_mqtt_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_ping_bm" name="lwip_ping_bm" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_ping/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_ping/bm" type="xml">
            <files mask="lwip_ping_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_ping_freertos" name="lwip_ping_freertos" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_ping/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_ping/freertos" type="xml">
            <files mask="lwip_ping_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_tcpecho_bm" name="lwip_tcpecho_bm" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_tcpecho/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_tcpecho/bm" type="xml">
            <files mask="lwip_tcpecho_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_tcpecho_freertos" name="lwip_tcpecho_freertos" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_tcpecho/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_tcpecho/freertos" type="xml">
            <files mask="lwip_tcpecho_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_udpecho_bm" name="lwip_udpecho_bm" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_udpecho/bm">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_udpecho/bm" type="xml">
            <files mask="lwip_udpecho_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_lwip_udpecho_freertos" name="lwip_udpecho_freertos" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="mdk" compiler="compiler_armcc" category="lwip_examples" path="boards/lpcxpresso54608/lwip_examples/lwip_udpecho/freertos">
          <external path="boards/lpcxpresso54608/lwip_examples/lwip_udpecho/freertos" type="xml">
            <files mask="lwip_udpecho_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_mcan_interrupt_transfer" name="mcan_interrupt_transfer" brief="The mcan_interrupt example shows how to use MCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when users press space key in terminal. Endpoint B receives the message, printsthe message content to terminal and echoes back the message. Endpoint A will increase the receivedmessage and wait for the next transmission the users initiate." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/mcan" path="boards/lpcxpresso54608/driver_examples/mcan/interrupt_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/mcan/interrupt_transfer" type="xml">
            <files mask="mcan_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_mcan_loopback" name="mcan_loopback" brief="The mcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrate this example, only one board is needed. The example will config Tx Buffer to sendand Rx Fifo to receive. After that, the example will send a CAN Message throuth internal loopbackinterconnect and print out the Message payload to the terminal." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/mcan" path="boards/lpcxpresso54608/driver_examples/mcan/loopback">
          <external path="boards/lpcxpresso54608/driver_examples/mcan/loopback" type="xml">
            <files mask="mcan_loopback.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_mmccard_interrupt" name="mmccard_interrupt" brief="The MMCCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use interrupt based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="mdk" compiler="compiler_armcc" category="driver_examples/mmccard" path="boards/lpcxpresso54608/driver_examples/mmccard/interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/mmccard/interrupt" type="xml">
            <files mask="mmccard_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_mmccard_polling" name="mmccard_polling" brief="The MMCCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use polling based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="mdk" compiler="compiler_armcc" category="driver_examples/mmccard" path="boards/lpcxpresso54608/driver_examples/mmccard/polling">
          <external path="boards/lpcxpresso54608/driver_examples/mmccard/polling" type="xml">
            <files mask="mmccard_polling.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/mrt" path="boards/lpcxpresso54608/driver_examples/mrt">
          <external path="boards/lpcxpresso54608/driver_examples/mrt" type="xml">
            <files mask="mrt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_otp" name="otp" brief="The OTP example project is a demonstration program that uses the KSDK software to access OTP ROM API.It just prints the version of API at the moment." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/otp">
          <external path="boards/lpcxpresso54608/driver_examples/otp" type="xml">
            <files mask="otp.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_pint_pattern_match" name="pint_pattern_match" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/pint" path="boards/lpcxpresso54608/driver_examples/pint/pattern_match">
          <external path="boards/lpcxpresso54608/driver_examples/pint/pattern_match" type="xml">
            <files mask="pint_pattern_match.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_pint_pin_interrupt" name="pint_pin_interrupt" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/pint" path="boards/lpcxpresso54608/driver_examples/pint/pin_interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/pint/pin_interrupt" type="xml">
            <files mask="pint_pin_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_power_manager_lpc" name="power_manager_lpc" brief="The power_manager_lpc application shows the usage of normal power mode control APIs for entering the three kinds oflow power mode: Sleep mode, Deep Sleep mode and Sleep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up byprepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions.     鈥? Configure all pins as GPIO with pull-up resistor disabled in the IOCON block.     鈥? Configure GPIO pins as outputs using the GPIO DIR register.     鈥?Write 1 to the GPIO CLR register to drive the outputs LOW.     鈥?All peripherals disabled." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/power_manager_lpc">
          <external path="boards/lpcxpresso54608/demo_apps/power_manager_lpc" type="xml">
            <files mask="power_manager_lpc.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_qca_demo" name="qca_demo" brief="The qca_demo example provides basic commands to show the functionality of qca_wifi stack.The default IP configuration is &quot;addr: 192.168.1.10 mask: 255.255.255.0 gw: 192.168.1.1&quot;.To obtain a valid IP configuration from DHCP server, press 'd' after WiFi connection is established." toolchain="mdk" compiler="compiler_armcc" category="wifi_qca_examples" path="boards/lpcxpresso54608/wifi_qca_examples/qca_demo">
          <external path="boards/lpcxpresso54608/wifi_qca_examples/qca_demo" type="xml">
            <files mask="qca_demo.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_qca_fwupdate" name="qca_fwupdate" brief="No special requirements&#10;&#10;" toolchain="mdk" compiler="compiler_armcc" category="wifi_qca_examples" path="boards/lpcxpresso54608/wifi_qca_examples/qca_fwupdate">
          <external path="boards/lpcxpresso54608/wifi_qca_examples/qca_fwupdate" type="xml">
            <files mask="qca_fwupdate.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_qca_throughput" name="qca_throughput" brief="The qca_throughput demo tests transfer throughput." toolchain="mdk" compiler="compiler_armcc" category="wifi_qca_examples" path="boards/lpcxpresso54608/wifi_qca_examples/qca_throughput">
          <external path="boards/lpcxpresso54608/wifi_qca_examples/qca_throughput" type="xml">
            <files mask="qca_throughput.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rit_example" name="rit_example" brief="The RIT project is a simple demonstration program of the SDK RIT driver. It sets up the RIThardware block to trigger a periodic interrupt at 1 second period interval to toggel a specifiedLED on board." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/rit" path="boards/lpcxpresso54608/driver_examples/rit">
          <external path="boards/lpcxpresso54608/driver_examples/rit" type="xml">
            <files mask="rit_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rng_random" name="rng_random" brief="The RNG example project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal. 32 32-bit numbers are read and skipped per one 32-bit number read and used.This is to get a better entropy as suggested by user manual." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/rng" path="boards/lpcxpresso54608/driver_examples/rng/random">
          <external path="boards/lpcxpresso54608/driver_examples/rng/random" type="xml">
            <files mask="rng_random.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rom_dev_audio_bm" name="rom_dev_audio_bm" brief="The example shows how to use USBD ROM stack to create and USB AUDIO class device. This device supports 2 channel audio in (MIC/LINE_IN) and 2 channel audio out (SPEAKERS/HEADPHONE)." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_rom_device_audio/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_rom_device_audio/bm" type="xml">
            <files mask="rom_dev_audio_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rom_dev_audio_dmic_bm" name="rom_dev_audio_dmic_bm" brief="The example shows how to use USBD ROM stack to create and USB AUDIO class device. This device supports 2 channels audio in." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_rom_device_audio_dmic/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_rom_device_audio_dmic/bm" type="xml">
            <files mask="rom_dev_audio_dmic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rom_dev_cdc_bm" name="rom_dev_cdc_bm" brief="The example shows how to use USBD ROM stack to create a virtual comm port. When the USB on J3 is connected to a PC, the host would recognize the USB connection as a new serial port." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_rom_device_cdc/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_rom_device_cdc/bm" type="xml">
            <files mask="rom_dev_cdc_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rom_dev_hid_generic_bm" name="rom_dev_hid_generic_bm" brief="The example shows how to us USBD ROM stack to creates a generic HID device. The example supports 1 byte report and loops back the data received in SET_REPORT message.." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_rom_device_hid_generic/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_rom_device_hid_generic/bm" type="xml">
            <files mask="rom_dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rom_dev_msc_ram_bm" name="rom_dev_msc_ram_bm" brief="The example shows how to use USBD ROM stack to create a RAM disk. When the USB on J3 is connected to a PC, the host would recognize the USB connection as a mass storage device. Note that the storage happens on the RAM and is not a persistent storage.." toolchain="mdk" compiler="compiler_armcc" category="usb_examples" path="boards/lpcxpresso54608/usb_examples/usb_rom_device_msc_ram/bm">
          <external path="boards/lpcxpresso54608/usb_examples/usb_rom_device_msc_ram/bm" type="xml">
            <files mask="rom_dev_msc_ram_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_rtc_example" name="rtc_example" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/rtc" path="boards/lpcxpresso54608/driver_examples/rtc">
          <external path="boards/lpcxpresso54608/driver_examples/rtc" type="xml">
            <files mask="rtc_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sctimer_16bit_counter" name="sctimer_16bit_counter" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sctimer" path="boards/lpcxpresso54608/driver_examples/sctimer/16bit_counter">
          <external path="boards/lpcxpresso54608/driver_examples/sctimer/16bit_counter" type="xml">
            <files mask="sctimer_16bit_counter.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sctimer_multi_state_pwm" name="sctimer_multi_state_pwm" brief="The SCTImer multi-state project is a demonstration program of the SCTimer state machine. It shows how to set up events to be triggered in a certain stateand transitioning between states.State 0 has 2 events that generate a PWM signal, it also has an event linked to an input signal to transition to State 1.State 1 has 4 events that generate 2 PWM signals, it also has an event linked to an input signal to transition to State 0." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sctimer" path="boards/lpcxpresso54608/driver_examples/sctimer/multi_state_pwm">
          <external path="boards/lpcxpresso54608/driver_examples/sctimer/multi_state_pwm" type="xml">
            <files mask="sctimer_multi_state_pwm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sctimer_pwm_with_dutycyle_change" name="sctimer_pwm_with_dutycyle_change" brief="This SCTIMer project is a demonstration program of the SDK SCTimer driver's PWM generation. It sets up a PWM signaland periodically updates the PWM signals dutycycle." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sctimer" path="boards/lpcxpresso54608/driver_examples/sctimer/pwm_with_dutycyle_change">
          <external path="boards/lpcxpresso54608/driver_examples/sctimer/pwm_with_dutycyle_change" type="xml">
            <files mask="sctimer_pwm_with_dutycyle_change.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sctimer_simple_pwm" name="sctimer_simple_pwm" brief="The SCTimer project is a simple demonstration program of the SDK SCTimer's driver capabiltiy to generate PWM signals." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sctimer" path="boards/lpcxpresso54608/driver_examples/sctimer/simple_pwm">
          <external path="boards/lpcxpresso54608/driver_examples/sctimer/simple_pwm" type="xml">
            <files mask="sctimer_simple_pwm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sdcard_fatfs_freertos" name="sdcard_fatfs_freertos" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="mdk" compiler="compiler_armcc" category="demo_apps/sdcard_fatfs_freertos" path="boards/lpcxpresso54608/demo_apps/sdcard_fatfs_freertos">
          <external path="boards/lpcxpresso54608/demo_apps/sdcard_fatfs_freertos" type="xml">
            <files mask="sdcard_fatfs_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sdcard_interrupt" name="sdcard_interrupt" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sdcard" path="boards/lpcxpresso54608/driver_examples/sdcard/interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/sdcard/interrupt" type="xml">
            <files mask="sdcard_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sdcard_polling" name="sdcard_polling" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/sdcard" path="boards/lpcxpresso54608/driver_examples/sdcard/polling">
          <external path="boards/lpcxpresso54608/driver_examples/sdcard/polling" type="xml">
            <files mask="sdcard_polling.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_sdio" name="sdio" brief="The SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver and this is a very simple example." toolchain="mdk" compiler="compiler_armcc" category="driver_examples" path="boards/lpcxpresso54608/driver_examples/sdio">
          <external path="boards/lpcxpresso54608/driver_examples/sdio" type="xml">
            <files mask="sdio.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/shell">
          <external path="boards/lpcxpresso54608/demo_apps/shell" type="xml">
            <files mask="shell.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_dma_b2b_transfer_master" name="spi_dma_b2b_transfer_master" brief="The spi_dma_b2b_transfer_master example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from slave is correct. This example needs to work with spi_dma_b2b_transfer_slave example.Note: This example will run in master mode, please prepare another board for slave, and the slave       board should be started first.Project Information1.How to set the baudrate of SPI?  The baudrate of SPI is easy to set, just make sure the source clock of SPI." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="spi_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_dma_b2b_transfer_slave" name="spi_dma_b2b_transfer_slave" brief="The spi_dma_b2b_transfer_slave example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from master is correct. This example needs to work with spi_dma_b2b_transfer_master example." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="spi_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_dma_master" name="spi_half_duplex_dma_master" brief="The spi_half_duplex_dma_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in DMA way. " toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/dma/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/dma/master" type="xml">
            <files mask="spi_half_duplex_dma_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_dma_slave" name="spi_half_duplex_dma_slave" brief="The spi_half_duplex_dma transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses dma mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/dma/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/dma/slave" type="xml">
            <files mask="spi_half_duplex_dma_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_int_master" name="spi_half_duplex_int_master" brief="The spi_half_duplex_int_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in interrupt way. " toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/int/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/int/master" type="xml">
            <files mask="spi_half_duplex_int_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_int_slave" name="spi_half_duplex_int_slave" brief="The spi_half_duplex_int_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/int/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/int/slave" type="xml">
            <files mask="spi_half_duplex_int_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_polling_master" name="spi_half_duplex_polling_master" brief="The spi_half_duplex_polling_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the othere board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in polling way. " toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/polling/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/polling/master" type="xml">
            <files mask="spi_half_duplex_polling_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_half_duplex_polling_slave" name="spi_half_duplex_polling_slave" brief="The spi_half_duplex_polling_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/polling/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/half_duplex_transfer/polling/slave" type="xml">
            <files mask="spi_half_duplex_polling_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_interrupt" name="spi_interrupt" brief="The spi_interrupt example shows how to use spi functional API to do interrupt transfer:In this example, one spi instance as master and another spi instance as slave. Master sends a piece of data to slave,and check if the data slave received is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/spi/interrupt" type="xml">
            <files mask="spi_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="spi_interrupt_b2b_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="spi_interrupt_b2b_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/polling_b2b_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/spi/polling_b2b_transfer/master" type="xml">
            <files mask="spi_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spi" path="boards/lpcxpresso54608/driver_examples/spi/polling_b2b_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/spi/polling_b2b_transfer/slave" type="xml">
            <files mask="spi_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spifi_dma_transfer" name="spifi_dma_transfer" brief="The SPIFI DMA Example project is a demonstration program that uses the KSDK software to program external serialflash using DMA and read through AHB bus." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spifi" path="boards/lpcxpresso54608/driver_examples/spifi/dma_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/spifi/dma_transfer" type="xml">
            <files mask="spifi_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_spifi_polling_transfer" name="spifi_polling_transfer" brief="The SPIFI Polling Example project is a demonstration program that uses the KSDK software to program external serialflash using polling and read through AHB bus." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/spifi" path="boards/lpcxpresso54608/driver_examples/spifi/polling_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/spifi/polling_transfer" type="xml">
            <files mask="spifi_polling_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_touch_cursor" name="touch_cursor" brief="The touch_cursor demo shows how to use LCD hardware cursor and position it using touch panel.In this example, a 32x32 cursor is shown. The cursor's position is changed in reaction to detected touch." toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/touch_cursor">
          <external path="boards/lpcxpresso54608/demo_apps/touch_cursor" type="xml">
            <files mask="touch_cursor.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_dma_double_buffer_transfer" name="usart_dma_double_buffer_transfer" brief="This example shows how to use the DMA driver to implement a double buffer receive scheme from the USARTThe example shows the double buffer constructed using two descriptors (g_pingpong_desc). These descriptors are cycled from one to the other.Things to note- The descriptors of the ping pong transfer need to be aligned to size 16- The inital transfer will perform the same job as first descriptor of ping pong, so the first linkeage is to go to g_pingpong_desc[1]- g_pingpong_desc[1] then chains the g_pingpong_desc[0] as the next descriptor- The properties are set up such that g_pingpong_desc[0] (and the initial configuration uses INTA to signal back to the callback)- g_pingpong_desc[1] uses INTB to signal to the callback- The scheduled callback uses this information to know which data was last writtenA note on PerformanceThe intent of this example is to illustrate how a double-buffer scheme can be implemented using the dma. The performance of this example will be limited to how quickly the echo printer can read-out the data from the ping pong buffer and display it. This means that the example will work well if characters are entered at a rate where the DMA callback to echo the string can keep up with the input stream. Connecting the USARTRX to a continuous fast speed will cause the DMA to fall behind. " toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/dma_double_buffer_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/usart/dma_double_buffer_transfer" type="xml">
            <files mask="usart_dma_double_buffer_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_dma_rb_transfer" name="usart_dma_rb_transfer" brief="The usart_dma ring buffer example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board will send back all characters that PC send to the board." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/dma_rb_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/usart/dma_rb_transfer" type="xml">
            <files mask="usart_dma_rb_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_dma_transfer" name="usart_dma_transfer" brief="The usart_dma example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/dma_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/usart/dma_transfer" type="xml">
            <files mask="usart_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_interrupt" name="usart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/interrupt">
          <external path="boards/lpcxpresso54608/driver_examples/usart/interrupt" type="xml">
            <files mask="usart_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_interrupt_rb_transfer" name="usart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/interrupt_rb_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/usart/interrupt_rb_transfer" type="xml">
            <files mask="usart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_interrupt_transfer" name="usart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/interrupt_transfer">
          <external path="boards/lpcxpresso54608/driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="usart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_polling" name="usart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/polling">
          <external path="boards/lpcxpresso54608/driver_examples/usart/polling" type="xml">
            <files mask="usart_polling.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_sync_transfer_master" name="usart_sync_transfer_master" brief="The usart synchronous transfer example shows how to use usart driver in synchronous way." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/sync_transfer/master">
          <external path="boards/lpcxpresso54608/driver_examples/usart/sync_transfer/master" type="xml">
            <files mask="usart_sync_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_usart_sync_transfer_slave" name="usart_sync_transfer_slave" brief="The usart synchronous transfer example shows how to use usart driver in synchronous way." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/usart" path="boards/lpcxpresso54608/driver_examples/usart/sync_transfer/slave">
          <external path="boards/lpcxpresso54608/driver_examples/usart/sync_transfer/slave" type="xml">
            <files mask="usart_sync_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_utick_wakeup" name="utick_wakeup" brief="The purpose of this demo is to show wakeup from deep sleep mode using MicroTick timer.The demo sets the MicroTick Timer as a wake up source and puts the device in deep-sleep mode. The MicroTick timer wakes up the device. " toolchain="mdk" compiler="compiler_armcc" category="demo_apps" path="boards/lpcxpresso54608/demo_apps/utick_wakeup">
          <external path="boards/lpcxpresso54608/demo_apps/utick_wakeup" type="xml">
            <files mask="utick_wakeup.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54608_wwdt_example" name="wwdt_example" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="mdk" compiler="compiler_armcc" category="driver_examples/wwdt" path="boards/lpcxpresso54608/driver_examples/wwdt">
          <external path="boards/lpcxpresso54608/driver_examples/wwdt" type="xml">
            <files mask="wwdt_example.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="BOARD_FLASH_lpcxpresso54608">
              <driverBinary path="devices/LPC54608/mcuxpresso" type="binary">
                <files mask="LPC546xx_SPIFI_SFDP.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="LPC54608J512" name="LPC54608" href="http://www.nxp.com/lpc" version="1.0.0" full_name="LPC54608J512" family="LPC546xx" platform="LPC">
      <description>The LPC5460x are ARM Cortex-M4 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The LPC5460x are ARM Cortex-M4 based microcontrollers for embedded applications. These devices include an ARM Cortex-M4 coprocessor, up to 200 KB of on-chip SRAM, up to 512 KB on-chip flash, full-speed and high speed USB device interface with Crystal-less operation, a DMIC subsystem with PDM microphone interface and I²S, five general-purpose timers, one SCTimer/PWM, one RTC/alarm timer, one 24-bit Multi-Rate Timer (MRT), a Windowed Watchdog Timer (WWDT), eight flexible serial communication peripherals (each of which can be a USART, SPI, or I²C interface), and one 12-bit 5.0 Msamples/sec ADC, and a temperature sensor. The ARM Cortex-M4 is a 32-bit core that offers system enhancements such as low power consumption, enhanced debug features, and a high level of support block integration. The ARM Cortex-M4 CPU incorporates a 3-stage pipeline, uses a Harvard architecture with separate local instruction and data buses as well as a third bus for peripherals, and includes an internal prefetch unit that supports speculative branching. The ARM Cortex-M4 supports single-cycle digital signal processing and SIMD instructions. A hardware floating-point unit is integrated in the core.</content>
          </specific>
        </metadata>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="core0_LPC54608J512" name="core0" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_LPC54608J512" name="PROGRAM_FLASH" addr="00000000" size="00080000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_UPPER_LPC54608J512" name="SRAM_UPPER" addr="20000000" size="00028000" type="RAM" access="RW"/>
        <memoryBlock id="SRAMX_LPC54608J512" name="SRAMX" addr="04000000" size="00008000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_LPC54608J512" name="USB_RAM" addr="40100000" size="00002000" type="RAM" access="RW"/>
        <memoryBlock id="EEPROM_LPC54608J512" name="EEPROM" addr="40108000" size="00004000" type="EEPROM" access="RO"/>
      </memory>
      <total_memory flash_size_kb="512" ram_size_kb="192"/>
      <package id="LPC54608J512BD208" name="LPC54608J512BD208"/>
      <package id="LPC54608J512ET180" name="LPC54608J512ET180"/>
      <evaluation_boards>
        <evaluation_board name="lpcxpresso54608"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.LPC54608J512" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.LPC54608J512" name="internal.has_swo" value="true"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_LPC54608J512">
              <driverBinary path="devices/LPC54608/mcuxpresso" type="binary">
                <files mask="LPC5460x_512K.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.lpcxpresso54608.LPC54608" name="lpcxpresso54608" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 component.serial_manager_uart.LPC54608 component.usart_adapter.LPC54608 device.LPC54608_CMSIS.LPC54608 device.LPC54608_startup.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.emc.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.lpc_gpio.LPC54608 platform.drivers.lpc_iocon.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 utility.debug_console.LPC54608" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/lpcxpresso54608/project_template" target_path="board/boards" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/lpcxpresso54608/project_template" target_path="board/boards" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.LPC54608" name="CMSIS" version="5.1.1" devices="LPC54608J512" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54608 platform.Include_common.LPC54608" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.LPC54608" name="CMSIS_DSP_Lib" version="5.1.1" devices="LPC54608J512" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/BasicMathFunctions" target_path="src" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/CommonTables" target_path="src" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ComplexMathFunctions" target_path="src" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ControllerFunctions" target_path="src" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FastMathFunctions" target_path="src" type="src">
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FilteringFunctions" target_path="src" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/MatrixFunctions" target_path="src" type="src">
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/StatisticsFunctions" target_path="src" type="src">
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/SupportFunctions" target_path="src" type="src">
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4bf_math.LPC54608" name="arm_cortexM4bf_math" version="1.5.2" devices="LPC54608J512" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM4bf_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4lf_math.LPC54608" name="arm_cortexM4lf_math" version="1.5.2" devices="LPC54608J512" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM4lf_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="5.1.1" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54608" name="CAN" version="1.2.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" name="Common" version="5.1.1" devices="LPC54608J512" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54608" name="Ethernet" version="2.1.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54608" name="Ethernet_MAC" version="2.1.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54608" name="Ethernet_PHY" version="2.1.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54608" name="Flash" version="2.1.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54608" name="I2C" version="2.3.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54608" name="MCI" version="2.3.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54608" name="NAND" version="2.3.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54608" name="SAI" version="1.1.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54608" name="SPI" version="2.2.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54608" name="USART" version="2.3.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54608" name="USB" version="2.2.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54608" name="USB_Device" version="2.2.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54608" name="USB_Host" version="2.2.0" devices="LPC54608J512" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54608" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.Include_common.LPC54608" name="CMSIS_Include_common" version="5.1.1" devices="LPC54608J512" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm4.LPC54608" name="CMSIS_Include_core_cm4" version="5.1.1" devices="LPC54608J512" dependency="platform.Include_common.LPC54608" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="project_template.LPC54608.LPC54608" name="LPC54608" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 component.serial_manager_uart.LPC54608 component.usart_adapter.LPC54608 device.LPC54608_CMSIS.LPC54608 device.LPC54608_startup.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.emc.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.lpc_gpio.LPC54608 platform.drivers.lpc_iocon.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 utility.debug_console.LPC54608" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/LPC54608/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/LPC54608/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.LPC54608" name="RTE_Device" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/LPC54608/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.LPC54608" name="cmake_toolchain" version="1.0.0" devices="LPC54608J512" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.button.LPC54608" name="button" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.timer_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/button" target_path="component/button" type="src">
        <files mask="button.c"/>
      </source>
      <source path="components/button" target_path="component/button" type="c_include">
        <files mask="button.h"/>
      </source>
    </component>
    <component id="component.codec_i2c.LPC54608" name="codec_i2c" version="2.1.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/codec/i2c" target_path="codec" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source path="components/codec/i2c" target_path="codec" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
    </component>
    <component id="component.ctimer_adapter.LPC54608" name="ctimer_adapter" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.ctimer.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/timer" target_path="component/timer" type="src">
        <files mask="ctimer_adapter.c"/>
      </source>
      <source path="components/timer" target_path="component/timer" type="c_include">
        <files mask="timer.h"/>
      </source>
    </component>
    <component id="component.flexcomm_i2c_adapter.LPC54608" name="flexcomm_i2c_adapter" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/i2c" target_path="component/i2c" type="src">
        <files mask="flexcomm_i2c_adapter.c"/>
      </source>
      <source path="components/i2c" target_path="component/i2c" type="c_include">
        <files mask="i2c.h"/>
      </source>
    </component>
    <component id="component.gpio_lpc.LPC54608" name="gpio_lpc" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.inputmux.LPC54608 platform.drivers.inputmux_connections.LPC54608 platform.drivers.lpc_gpio.LPC54608 platform.drivers.pint.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/gpio" target_path="component/gpio" type="c_include">
        <files mask="gpio.h"/>
      </source>
      <source path="components/gpio" target_path="component/gpio" type="src">
        <files mask="gpio_lpc.c"/>
      </source>
    </component>
    <component id="component.led.LPC54608" name="led" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.timer_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/led" target_path="component/led" type="src">
        <files mask="led.c"/>
      </source>
      <source path="components/led" target_path="component/led" type="c_include">
        <files mask="led.h"/>
      </source>
    </component>
    <component id="component.lists.LPC54608" name="lists" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.mrt_adapter.LPC54608" name="mrt_adapter" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.mrt.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/timer" target_path="component/timer" type="src">
        <files mask="mrt_adapter.c"/>
      </source>
      <source path="components/timer" target_path="component/timer" type="c_include">
        <files mask="timer.h"/>
      </source>
    </component>
    <component id="component.osa_bm.LPC54608" name="osa_bm" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/osa" target_path="component/osa" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source path="components/osa" target_path="component/osa" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
    </component>
    <component id="component.osa_free_rtos.LPC54608" name="osa_free_rtos" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/osa" target_path="component/osa" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source path="components/osa" target_path="component/osa" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
    </component>
    <component id="component.panic.LPC54608" name="panic" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 utility.debug_console.LPC54608" user_visible="true" type="software_component">
      <source path="components/panic" target_path="component/panic" type="src">
        <files mask="panic.c"/>
      </source>
      <source path="components/panic" target_path="component/panic" type="c_include">
        <files mask="panic.h"/>
      </source>
    </component>
    <component id="component.pwm_ctimer_adapter.LPC54608" name="pwm_ctimer_adapter" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.ctimer.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/pwm" target_path="component/pwm" type="c_include">
        <files mask="pwm.h"/>
      </source>
      <source path="components/pwm" target_path="component/pwm" type="src">
        <files mask="pwm_ctimer_adapter.c"/>
      </source>
    </component>
    <component id="component.serial_manager.LPC54608" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="LPC54608J512" dependency="component.lists.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_swo.LPC54608" name="serial_manager_swo" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_swo.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_swo.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.LPC54608" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc.LPC54608" name="serial_manager_usb_cdc" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.usb.device.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="other">
        <files mask="cdc.cat"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="configuration">
        <files mask="fsl_ucwxp.inf"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_device_config.lpcxpresso54608.LPC54608" name="lpcxpresso54608" version="1.0.0" devices="LPC54608J512" user_visible="true" type="abstraction_layer">
      <source path="boards/lpcxpresso54608/component_examples/config" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="component.timer_manager.LPC54608" name="timer_manager" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/timer_manager" target_path="component/timer_manager" type="src">
        <files mask="timer_manager.c"/>
      </source>
      <source path="components/timer_manager" target_path="component/timer_manager" type="c_include">
        <files mask="timer_manager.h"/>
      </source>
    </component>
    <component id="component.usart_adapter.LPC54608" name="usart_adapter" version="1.0.0" full_name="usart_adapter" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="usart_adapter.c"/>
      </source>
    </component>
    <component id="component.wm8904_adapter.LPC54608" name="wm8904_adapter" version="2.1.0" devices="LPC54608J512" dependency="component.codec_i2c.LPC54608 device.LPC54608_CMSIS.LPC54608 driver.codec.LPC54608 driver.wm8904.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/codec/port/wm8904" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="device.LPC54608_CMSIS.LPC54608" name="LPC54608_CMSIS" version="1.0.0" devices="LPC54608J512" dependency="platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608" user_visible="true" type="CMSIS_Include">
      <source path="devices/LPC54608" target_path="device" type="c_include">
        <files mask="LPC54608.h"/>
        <files mask="LPC54608_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_LPC54608.h"/>
      </source>
      <source path="devices/LPC54608" target_path="device" type="src">
        <files mask="system_LPC54608.c"/>
      </source>
    </component>
    <component id="device.LPC54608_debugger.LPC54608" name="LPC54608_debugger" version="1.0.0" devices="LPC54608J512" user_visible="true" type="debugger">
      <source path="devices/LPC54608" target_path="src" type="xml">
        <files mask="LPC54608.xml"/>
      </source>
    </component>
    <component id="platform.devices.LPC54608_linker.LPC54608" name="LPC54608_linker" version="1.0.0" devices="LPC54608J512" user_visible="true" type="linker">
      <source toolchain="mdk" path="devices/LPC54608/arm" target_path="src" type="linker">
        <files mask="LPC54608J512_flash.scf"/>
        <files mask="LPC54608J512_ram.scf"/>
      </source>
    </component>
    <component id="device.LPC54608_startup.LPC54608" name="LPC54608_startup" version="1.0.0" devices="LPC54608J512" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="mdk" path="devices/LPC54608/arm" target_path="startup" type="asm_include">
        <files mask="startup_LPC54608.s"/>
      </source>
    </component>
    <component id="docs.LPC54608.LPC54608" name="LPC54608" version="1.0.0" devices="LPC54608J512" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes_LPC546xx.pdf"/>
      </source>
    </component>
    <component id="docs.images.LPC54608" name="images" version="1.0.0" devices="LPC54608J512" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="LPCXpresso54608.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.clock.LPC54608" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_cmsis.LPC54608" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" devices="LPC54608J512" dependency="RTE_Device.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.flexcomm_i2c_dma.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_cmsis.LPC54608" name="spi_cmsis" brief="SPI CMSIS Driver" version="2.0.0" devices="LPC54608J512" dependency="RTE_Device.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_spi_dma.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_cmsis.LPC54608" name="usart_cmsis" brief="USART CMSIS Driver" version="2.0.0" devices="LPC54608J512" dependency="RTE_Device.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54608 platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.flexcomm_usart_dma.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_usart_cmsis.c"/>
      </source>
      <source path="devices/LPC54608/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart_cmsis.h"/>
      </source>
    </component>
    <component id="driver.codec.LPC54608" name="codec" version="2.1.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.LPC54608" name="common" brief="COMMON Driver" version="2.1.0" full_name="COMMON Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.ctimer.LPC54608" name="ctimer" brief="CTimer Driver" version="2.0.2" full_name="CTimer Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmic.LPC54608" name="dmic" brief="DMIC Driver" version="2.1.0" full_name="DMIC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmic_dma.LPC54608" name="dmic_dma" brief="DMIC Driver" version="2.1.0" full_name="DMIC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.dmic.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmic_hwvad.LPC54608" name="dmic_hwvad" brief="DMIC Driver" version="2.1.0" full_name="DMIC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.dmic.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
    </component>
    <component id="platform.drivers.eeprom.LPC54608" name="eeprom" brief="eeprom Driver" version="2.1.1" full_name="eeprom Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_eeprom.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_eeprom.h"/>
      </source>
    </component>
    <component id="platform.drivers.emc.LPC54608" name="emc" brief="EMC Driver" version="2.0.3" full_name="EMC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_emc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_emc.h"/>
      </source>
    </component>
    <component id="platform.drivers.flashiap.LPC54608" name="flashiap" brief="FLASHIAP Driver" version="2.0.0" full_name="FLASHIAP Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_flashiap.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flashiap.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm.LPC54608" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.1" full_name="FLEXCOMM Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c.LPC54608" name="i2c" brief="I2C Driver" version="2.0.6" full_name="FLEXCOMM I2C Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.LPC54608" name="i2c_dma" brief="I2C Driver" version="2.0.6" full_name="FLEXCOMM I2C DMA Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_freertos.LPC54608" name="i2c_freertos" brief="I2C Driver" version="2.0.6" full_name="FLEXCOMM I2C FREERTOS Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2c.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2s.LPC54608" name="flexcomm_i2s" brief="I2S Driver" version="2.1.0" full_name="FLEXCOMM I2S Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.LPC54608" name="flexcomm_i2s_dma" brief="I2S Driver" version="2.1.0" full_name="FLEXCOMM I2S DMA Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_i2s.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi.LPC54608" name="spi" brief="SPI Driver" version="2.0.4" full_name="FLEXCOMM SPI Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.LPC54608" name="spi_dma" brief="SPI Driver" version="2.0.4" full_name="FLEXCOMM SPI DMA Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_freertos.LPC54608" name="spi_freertos" brief="SPI Driver" version="2.0.4" full_name="FLEXCOMM SPI FREERTOS Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart.LPC54608" name="usart" brief="USART Driver" version="2.1.0" full_name="FLEXCOMM USART Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.LPC54608" name="usart_dma" brief="USART Driver" version="2.1.0" full_name="FLEXCOMM USART DMA Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_freertos.LPC54608" name="usart_freertos" brief="USART Driver" version="2.1.0" full_name="FLEXCOMM USART FREERTOS Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_usart.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_usart_freertos.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_usart_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.fmc.LPC54608" name="fmc" brief="fmc Driver" version="2.0.1" full_name="fmc Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_fmc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_fmc.h"/>
      </source>
    </component>
    <component id="platform.drivers.fmeas.LPC54608" name="fmeas" brief="FMEAS Driver" version="2.1.0" full_name="FMEAS Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
    </component>
    <component id="platform.drivers.fro_calib.LPC54608" name="fro_calib" brief="FRO calibration Lib" version="2.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source toolchain="mdk" path="devices/LPC54608/arm" target_path="libs" type="lib">
        <files mask="keil_lib_fro_calib.lib"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_fro_calib.h"/>
      </source>
    </component>
    <component id="driver.ft5406.LPC54608" name="ft5406" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="false" type="board_component">
      <source path="components/ft5406" target_path="touchpanel" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source path="components/ft5406" target_path="touchpanel" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
    </component>
    <component id="platform.drivers.gint.LPC54608" name="gint" brief="GINT Driver" version="2.0.1" full_name="GINT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_gint.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gint.h"/>
      </source>
    </component>
    <component id="platform.drivers.iap.LPC54608" name="iap" brief="IAP Driver" version="2.0.2" full_name="IAP Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
    </component>
    <component id="platform.drivers.inputmux.LPC54608" name="inputmux" brief="INPUTMUX Driver" version="2.0.0" full_name="INPUTMUX Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.inputmux_connections.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
    </component>
    <component id="platform.drivers.inputmux_connections.LPC54608" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.1" full_name="Inputmux_connections Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_adc.LPC54608" name="adc" brief="ADC Driver" version="2.3.1" full_name="ADC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_crc.LPC54608" name="lpc_crc" brief="CRC Driver" version="2.0.1" full_name="CRC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_dma.LPC54608" name="dma" brief="DMA Driver" version="2.3.0" full_name="DMA Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_enet.LPC54608" name="lpc_enet" brief="enet Driver" version="2.1.3" full_name="enet Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_gpio.LPC54608" name="gpio" brief="GPIO Driver" version="2.1.4" full_name="GPIO Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_iocon.LPC54608" name="iocon" brief="IOCON Driver" version="2.1.1" full_name="IOCON Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iocon.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_lcdc.LPC54608" name="lcdc" brief="LCDC Driver" version="2.0.1" full_name="LCDC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_lcdc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lcdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_rtc.LPC54608" name="lpc_rtc" brief="RTC Driver" version="2.0.0" full_name="RTC Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
    </component>
    <component id="platform.drivers.mcan.LPC54608" name="mcan" brief="MCAN Driver" version="2.1.0" full_name="MCAN Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_mcan.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mcan.h"/>
      </source>
    </component>
    <component id="driver.mma8652fc.LPC54608" name="mma8652fc" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="board_component">
      <source path="components/mma8652fc" target_path="accel" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source path="components/mma8652fc" target_path="accel" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
    </component>
    <component id="platform.drivers.mrt.LPC54608" name="mrt" brief="MRT Driver" version="2.0.1" full_name="MRT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
    </component>
    <component id="driver.nor_flash-common.LPC54608" name="nor_flash-common" version="1.0.0" devices="LPC54608J512" user_visible="true" type="abstraction_layer">
      <source path="components/flash/nor" target_path="nor_flash" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
    </component>
    <component id="driver.nor_flash-controller-spifi.LPC54608" name="nor_flash-controller-spifi" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 driver.nor_flash-common.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 platform.drivers.spifi.LPC54608" user_visible="true" type="abstraction_layer">
      <source path="components/flash/nor/spifi" target_path="nor_flash" type="src">
        <files mask="fsl_spifi_nor_flash.c"/>
      </source>
      <source path="components/flash/nor/spifi" target_path="nor_flash" type="c_include">
        <files mask="fsl_spifi_nor_flash.h"/>
      </source>
    </component>
    <component id="platform.drivers.otp.LPC54608" name="otp" brief="OTP Driver" version="2.0.0" full_name="OTP Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_otp.h"/>
      </source>
    </component>
    <component id="driver.phylan8720a.LPC54608" name="phylan8720a" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.lpc_enet.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="board_component">
      <source path="components/phylan8720a" target_path="board" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source path="components/phylan8720a" target_path="board" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
    </component>
    <component id="platform.drivers.pint.LPC54608" name="pint" brief="PINT Driver" version="2.1.3" full_name="PINT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
    </component>
    <component id="platform.drivers.power.LPC54608" name="power" brief="Power driver" version="2.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source toolchain="mdk" path="devices/LPC54608/arm" target_path="libs" type="lib">
        <files mask="keil_lib_power.lib"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
    </component>
    <component id="platform.drivers.reset.LPC54608" name="reset" brief="Reset Driver" version="2.0.1" full_name="Reset Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
    </component>
    <component id="platform.drivers.rit.LPC54608" name="rit" brief="RIT Driver" version="2.1.0" full_name="RIT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_rit.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rit.h"/>
      </source>
    </component>
    <component id="platform.drivers.rng.LPC54608" name="rng" brief="RNG Driver" version="2.0.0" full_name="RNG Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rng.h"/>
      </source>
    </component>
    <component id="platform.drivers.sctimer.LPC54608" name="sctimer" brief="SCT Driver" version="2.1.0" full_name="SCT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
    </component>
    <component id="platform.drivers.sdif.LPC54608" name="sdif" brief="sdif Driver" version="2.0.11" full_name="sdif Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_sdif.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sdif.h"/>
      </source>
    </component>
    <component id="platform.drivers.spifi.LPC54608" name="spifi" brief="SPIFI Driver" version="2.0.2" full_name="SPIFI Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_spifi.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spifi.h"/>
      </source>
    </component>
    <component id="platform.drivers.spifi_dma.LPC54608" name="spifi_dma" brief="SPIFI Driver" version="2.0.2" full_name="SPIFI Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 platform.drivers.spifi.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_spifi_dma.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spifi_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.utick.LPC54608" name="utick" brief="UTICK Driver" version="2.0.2" full_name="UTICK Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
    </component>
    <component id="driver.wm8904.LPC54608" name="wm8904" version="2.1.0" devices="LPC54608J512" dependency="component.codec_i2c.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="software_component">
      <source path="components/codec/wm8904" target_path="codec" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source path="components/codec/wm8904" target_path="codec" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
    </component>
    <component id="platform.drivers.wwdt.LPC54608" name="wwdt" brief="WWDT Driver" version="2.1.2" full_name="WWDT Driver" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="driver">
      <source path="devices/LPC54608/drivers" target_path="drivers" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source path="devices/LPC54608/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.LPC54608" name="amazon_freertos_aws_iot" brief="AWS IOT" version="1.1.0" full_name="AWS IoT" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="middleware">
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/aws_iot" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="aws_appversion32.h"/>
        <files mask="aws_crypto.h"/>
        <files mask="aws_defender.h"/>
        <files mask="aws_greengrass_discovery.h"/>
        <files mask="aws_mqtt_agent.h"/>
        <files mask="aws_mqtt_lib.h"/>
        <files mask="aws_ota_agent.h"/>
        <files mask="aws_pkcs11.h"/>
        <files mask="aws_secure_sockets.h"/>
        <files mask="aws_shadow.h"/>
        <files mask="aws_system_init.h"/>
        <files mask="aws_tls.h"/>
        <files mask="aws_wifi.h"/>
        <files mask="event_groups.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/aws_iot" type="c_include">
        <files mask="aws_bufferpool.h"/>
        <files mask="aws_default_root_certificates.h"/>
        <files mask="aws_defender_cpu.h"/>
        <files mask="aws_defender_internals.h"/>
        <files mask="aws_defender_report.h"/>
        <files mask="aws_defender_report_cpu.h"/>
        <files mask="aws_defender_report_header.h"/>
        <files mask="aws_defender_report_tcp_conn.h"/>
        <files mask="aws_defender_report_types.h"/>
        <files mask="aws_defender_report_uptime.h"/>
        <files mask="aws_defender_report_utils.h"/>
        <files mask="aws_defender_tcp_conn.h"/>
        <files mask="aws_defender_uptime.h"/>
        <files mask="aws_doubly_linked_list.h"/>
        <files mask="aws_ggd_config_defaults.h"/>
        <files mask="aws_helper_secure_connect.h"/>
        <files mask="aws_lib_init.h"/>
        <files mask="aws_mqtt_agent_config_defaults.h"/>
        <files mask="aws_mqtt_buffer.h"/>
        <files mask="aws_mqtt_config_defaults.h"/>
        <files mask="aws_ota_agent_internal.h"/>
        <files mask="aws_ota_cbor.h"/>
        <files mask="aws_ota_cbor_internal.h"/>
        <files mask="aws_ota_pal.h"/>
        <files mask="aws_ota_types.h"/>
        <files mask="aws_secure_sockets_config_defaults.h"/>
        <files mask="aws_shadow_config_defaults.h"/>
        <files mask="aws_shadow_json.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
        <files mask="threading_alt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.bufferpool.LPC54608" name="amazon_freertos_bufferpool" brief="bufferpool" version="1.0.0" full_name="bufferpool" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/bufferpool" target_path="amazon-freertos/bufferpool" type="src">
        <files mask="aws_bufferpool_static_thread_safe.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.cbor.LPC54608" name="amazon_freertos_cbor" brief="cbor" version="1.0.0" full_name="cbor" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/cbor" target_path="amazon-freertos/cbor" type="other">
        <files mask="makefile"/>
        <files mask="readme.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/src" target_path="amazon-freertos/cbor" type="src">
        <files mask="aws_cbor.c"/>
        <files mask="aws_cbor_alloc.c"/>
        <files mask="aws_cbor_int.c"/>
        <files mask="aws_cbor_iter.c"/>
        <files mask="aws_cbor_map.c"/>
        <files mask="aws_cbor_mem.c"/>
        <files mask="aws_cbor_print.c"/>
        <files mask="aws_cbor_string.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/src" target_path="amazon-freertos/cbor" type="c_include">
        <files mask="aws_cbor.h"/>
        <files mask="aws_cbor_alloc.h"/>
        <files mask="aws_cbor_int.h"/>
        <files mask="aws_cbor_internals.h"/>
        <files mask="aws_cbor_iter.h"/>
        <files mask="aws_cbor_jump_table.h"/>
        <files mask="aws_cbor_map.h"/>
        <files mask="aws_cbor_mem.h"/>
        <files mask="aws_cbor_print.h"/>
        <files mask="aws_cbor_string.h"/>
        <files mask="aws_cbor_types.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/test" target_path="amazon-freertos/cbor" type="src">
        <files mask="assert_override.c"/>
        <files mask="test_aws_cbor.c"/>
        <files mask="test_aws_cbor_acc.c"/>
        <files mask="test_aws_cbor_alloc.c"/>
        <files mask="test_aws_cbor_int.c"/>
        <files mask="test_aws_cbor_iter.c"/>
        <files mask="test_aws_cbor_map.c"/>
        <files mask="test_aws_cbor_mem.c"/>
        <files mask="test_aws_cbor_print.c"/>
        <files mask="test_aws_cbor_string.c"/>
        <files mask="test_main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/test" target_path="amazon-freertos/cbor" type="c_include">
        <files mask="assert_override.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.crypto.LPC54608" name="amazon_freertos_crypto" brief="crypto" version="1.0.0" full_name="crypto" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/crypto" target_path="amazon-freertos/crypto" type="src">
        <files mask="aws_crypto.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.defender.LPC54608" name="amazon_freertos_defender" brief="defender" version="1.0.0" full_name="defender" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/defender" target_path="src" type="src">
        <files mask="aws_defender.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="other">
        <files mask="aws_defender_states.dot"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="image">
        <files mask="aws_defender_states.png"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="script">
        <files mask="draw_states.py"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/freertos" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/stub" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/stub" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/template" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/template" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unit_test" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unix" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unix" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/report" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_report.c"/>
        <files mask="aws_defender_report_cpu.c"/>
        <files mask="aws_defender_report_header.c"/>
        <files mask="aws_defender_report_tcp_conn.c"/>
        <files mask="aws_defender_report_uptime.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.demos.LPC54608" name="amazon_freertos_aws_iot_demos" brief="AWS IOT demos" version="1.2.7" full_name="demos" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/demos/common/devmode_key_provisioning" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_greengrass_discovery_demo.h"/>
        <files mask="aws_logging_task.h"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/logging" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_logging_task_dynamic_buffers.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.demos_unused.LPC54608" name="amazon_freertos_aws_iot_demos_unused" brief="AWS IOT demos" version="1.2.7" full_name="demos_unused" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/demos/common/defender" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_defender_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/demo_runner" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_demo_runner.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common" target_path="amazon-freertos/demos" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/greengrass_connectivity" target_path="amazon-freertos/demos" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/greengrass_connectivity" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_greengrass_discovery_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_defender_demo.h"/>
        <files mask="aws_demo_runner.h"/>
        <files mask="aws_hello_world.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_update_demo.h"/>
        <files mask="aws_shadow_lightbulb_on_off.h"/>
        <files mask="aws_simple_tcp_echo_server.h"/>
        <files mask="aws_subscribe_publish_loop.h"/>
        <files mask="aws_tcp_echo_client_single_tasks.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/mqtt" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_hello_world.c"/>
        <files mask="aws_subscribe_publish_loop.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_ota_update_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader" target_path="amazon-freertos/demos" type="other">
        <files mask=".gitignore"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/crypto/tinycrypt" target_path="amazon-freertos/demos" type="src">
        <files mask="asn1utility.c"/>
        <files mask="aws_boot_crypto.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/crypto/tinycrypt" target_path="amazon-freertos/demos" type="c_include">
        <files mask="asn1utility.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_boot_codesigner_public_key.h"/>
        <files mask="aws_boot_crypto.h"/>
        <files mask="aws_boot_flash.h"/>
        <files mask="aws_boot_loader.h"/>
        <files mask="aws_boot_log.h"/>
        <files mask="aws_boot_pal.h"/>
        <files mask="aws_boot_partition.h"/>
        <files mask="aws_boot_types.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/loader" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_boot_loader.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/logging" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_boot_log.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility" target_path="amazon-freertos/demos" type="other">
        <files mask=".gitignore"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility" target_path="amazon-freertos/demos" type="script">
        <files mask="binary_image_generator.py"/>
        <files mask="factory_image_generator.py"/>
        <files mask="ota_image_generator.py"/>
        <files mask="util.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/codesigner_cert_utility" target_path="amazon-freertos/demos" type="script">
        <files mask="codesigner_cert_utility.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/config-validation-rules" target_path="amazon-freertos/demos" type="other">
        <files mask="MCHP-Curiosity-PIC32MZEF"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/user-config" target_path="amazon-freertos/demos" type="other">
        <files mask="aws-code-sign.config"/>
        <files mask="ota-descriptor.config"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/shadow" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_shadow_lightbulb_on_off.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/tcp" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_simple_tcp_echo_server.c"/>
        <files mask="aws_tcp_echo_client_separate_tasks.c"/>
        <files mask="aws_tcp_echo_client_single_task.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos" target_path="amazon-freertos/demos" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/application_code" target_path="amazon-freertos/demos" type="src">
        <files mask="main.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/application_code/vendor_code" target_path="amazon-freertos/demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/config_files" target_path="amazon-freertos/demos" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/ide" target_path="amazon-freertos/demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.greengrass.LPC54608" name="amazon_freertos_greengrass" brief="greengrass" version="1.0.0" full_name="greengrass_discovery" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/greengrass" target_path="amazon-freertos/greengrass" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk64f.LPC54608" name="amazon_freertos_mflash_frdmk64f" brief="mflash_frdmk64f" version="1.0.0" full_name="mflash_frdmk64f" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk64f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk64f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk66f.LPC54608" name="amazon_freertos_mflash_frdmk66f" brief="mflash_frdmk66f" version="1.0.0" full_name="mflash_frdmk66f" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk66f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk66f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk82f.LPC54608" name="amazon_freertos_mflash_frdmk82f" brief="mflash_frdmk82f" version="1.0.0" full_name="mflash_frdmk82f" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk82f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk82f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc54s018m.LPC54608" name="amazon_freertos_mflash_lpc54s018m" brief="mflash_lpc54s018m" version="1.0.0" full_name="mflash_lpc54s018m" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54s018m" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54s018m" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc54xxx.LPC54608" name="amazon_freertos_mflash_lpc54xxx" brief="mflash_lpc54xxx" version="1.0.0" full_name="mflash_lpc54xxx" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54xxx" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54xxx" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc55s69.LPC54608" name="amazon_freertos_mflash_lpc55s69" brief="mflash_lpc55s69" version="1.0.0" full_name="mflash_lpc55s69" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc55s69" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc55s69" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1020.LPC54608" name="amazon_freertos_mflash_rt1020" brief="mflash_rt1020" version="1.0.0" full_name="mflash_rt1020" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1021" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1021" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1050.LPC54608" name="amazon_freertos_mflash_rt1050" brief="mflash_rt1050" version="1.0.0" full_name="mflash_rt1050" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1052" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1052" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1060.LPC54608" name="amazon_freertos_mflash_rt1060" brief="mflash_rt1060" version="1.0.0" full_name="mflash_rt1060" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1062" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1062" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1064.LPC54608" name="amazon_freertos_mflash_rt1064" brief="mflash_rt1064" version="1.0.0" full_name="mflash_rt1064" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1064" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1064" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt685.LPC54608" name="amazon_freertos_mflash_rt685" brief="mflash_rt685" version="1.0.0" full_name="mflash_rt685" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt685" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt685" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.se_hostlib.LPC54608" name="amazon_freertos_mflash" brief="mflash_se_hostlib" version="1.0.0" full_name="mflash_se_hostlib" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/se_hostlib" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mqtt.LPC54608" name="amazon_freertos_mqtt" brief="mqtt" version="1.0.0" full_name="mqtt" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/mqtt" target_path="amazon-freertos/mqtt" type="src">
        <files mask="aws_mqtt_agent.c"/>
        <files mask="aws_mqtt_lib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.ota.LPC54608" name="amazon_freertos_ota" brief="ota" version="1.0.0" full_name="ota" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/ota" target_path="amazon-freertos/ota" type="src">
        <files mask="aws_ota_agent.c"/>
        <files mask="aws_ota_cbor.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/ota/portable" target_path="amazon-freertos/ota" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/ota/portable/vendor/board" target_path="amazon-freertos/ota" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11.LPC54608" name="amazon_freertos_pkcs11" version="1.0.0" full_name="pkcs11" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/pkcs11/mbedtls" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_mbedtls.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/common" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11.se_hostlib.LPC54608" name="amazon_freertos_pkcs11_se_hostlib" brief="pkcs11_se_hostlib" version="1.0.0" full_name="pkcs11_se_hostlib" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/se_hostlib" target_path="src" type="src">
        <files mask="pkcs11_se.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/se_hostlib" target_path="src" type="c_include">
        <files mask="pkcs11_se.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11_unused.LPC54608" name="amazon_freertos_pkcs11" version="1.0.0" full_name="pkcs11" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/pkcs11/portable/vendor/board" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.LPC54608" name="amazon_freertos_secure_sockets" brief="secure_sockets" version="1.0.0" full_name="secure_sockets" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/freertos_plus_tcp" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/lwip" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/lpc54018iotmodule" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/vendor/board" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.lwip.LPC54608" name="amazon_freertos_secure_sockets_lwip" brief="secure_sockets_lwip" version="1.0.0" full_name="secure_sockets_lwip" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/lwip" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.wifi_qca.LPC54608" name="amazon_freertos_secure_sockets_wifi_qca" brief="secure_sockets_wifi_qca" version="1.0.0" full_name="secure_sockets_wifi_qca" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/wifi_qca" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.shadow.LPC54608" name="amazon_freertos_shadow" brief="shadow" version="1.0.0" full_name="shadow" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/shadow" target_path="amazon-freertos/shadow" type="src">
        <files mask="aws_shadow.c"/>
        <files mask="aws_shadow_json.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tests.LPC54608" name="amazon_freertos_tests" brief="tests" version="1.0.0" full_name="tests" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/demos/common/devmode_key_provisioning" target_path="amazon-freertos/devmode_key_provisioning" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/logging" target_path="amazon-freertos/logging" type="src">
        <files mask="aws_logging_task_dynamic_buffers.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/greengrass" target_path="amazon-freertos/greengrass" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="common-tests/include" type="c_include">
        <files mask="aws_appversion32.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="unity" type="doc">
        <files mask="license.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="unity" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="unity" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="unity" type="src">
        <files mask="unity.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="unity" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tests" target_path="common-tests" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/crypto" target_path="common-tests/crypto" type="src">
        <files mask="aws_test_crypto.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/framework" target_path="common-tests/framework" type="src">
        <files mask="aws_test_framework.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/greengrass" target_path="common-tests/greengrass" type="src">
        <files mask="aws_test_greengrass_discovery.c"/>
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/include" target_path="common-tests/include" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
        <files mask="aws_logging_task.h"/>
        <files mask="aws_mqtt_lib_test_access_declare.h"/>
        <files mask="aws_mqtt_lib_test_access_define.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_tls.h"/>
        <files mask="aws_test_utils.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/memory_leak" target_path="common-tests/memory_leak" type="src">
        <files mask="aws_memory_leak.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/mqtt" target_path="common-tests/mqtt" type="src">
        <files mask="aws_test_mqtt_agent.c"/>
        <files mask="aws_test_mqtt_lib.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/pkcs11" target_path="common-tests/pkcs11" type="src">
        <files mask="aws_test_pkcs11.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/secure_sockets" target_path="common-tests/secure_sockets" type="src">
        <files mask="aws_test_tcp.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/shadow" target_path="common-tests/shadow" type="src">
        <files mask="aws_test_shadow.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/test_runner" target_path="common-tests/test_runner" type="src">
        <files mask="aws_test_runner.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/tls" target_path="common-tests/tls" type="src">
        <files mask="aws_test_tls.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/wifi" target_path="common-tests/wifi" type="src">
        <files mask="aws_test_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tests.unused.LPC54608" name="amazon_freertos_tests" brief="tests" version="1.0.0" full_name="tests" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/tests/common/cbor" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_cbor.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/crypto" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_crypto.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/defender" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_defender.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/framework" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_framework.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/freertos_tcp" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_freertos_tcp.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/greengrass" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_greengrass_discovery.c"/>
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/include" target_path="amazon-freertos/tests" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_freertos_tcp_test_access_declare.h"/>
        <files mask="aws_freertos_tcp_test_access_dns_define.h"/>
        <files mask="aws_freertos_tcp_test_access_tcp_define.h"/>
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
        <files mask="aws_logging_task.h"/>
        <files mask="aws_mqtt_lib_test_access_declare.h"/>
        <files mask="aws_mqtt_lib_test_access_define.h"/>
        <files mask="aws_ota_agent_test_access_declare.h"/>
        <files mask="aws_ota_agent_test_access_define.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_pal_test_access_declare.h"/>
        <files mask="aws_ota_pal_test_access_define.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_tls.h"/>
        <files mask="aws_test_utils.h"/>
        <files mask="aws_unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/memory_leak" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_memory_leak.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/mqtt" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_mqtt_agent.c"/>
        <files mask="aws_test_mqtt_lib.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_ota_agent.c"/>
        <files mask="aws_test_ota_cbor.c"/>
        <files mask="aws_test_ota_pal.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="c_include">
        <files mask="aws_test_ota_pal_ecdsa_sha256_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha1_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha256_signature.h"/>
        <files mask="aws_test_ota_signature_methods.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota/test_files" target_path="amazon-freertos/tests" type="other">
        <files mask="describeStreamResponse.cbor"/>
        <files mask="ecdsa-sha256-signer.crt.pem"/>
        <files mask="ecdsa-sha256-signer.key.pem"/>
        <files mask="getStreamResponse_0.cbor"/>
        <files mask="getStreamResponse_1.cbor"/>
        <files mask="getStreamResponse_10.cbor"/>
        <files mask="getStreamResponse_11.cbor"/>
        <files mask="getStreamResponse_12.cbor"/>
        <files mask="getStreamResponse_13.cbor"/>
        <files mask="getStreamResponse_14.cbor"/>
        <files mask="getStreamResponse_15.cbor"/>
        <files mask="getStreamResponse_2.cbor"/>
        <files mask="getStreamResponse_3.cbor"/>
        <files mask="getStreamResponse_4.cbor"/>
        <files mask="getStreamResponse_5.cbor"/>
        <files mask="getStreamResponse_6.cbor"/>
        <files mask="getStreamResponse_7.cbor"/>
        <files mask="getStreamResponse_8.cbor"/>
        <files mask="getStreamResponse_9.cbor"/>
        <files mask="rsa-sha1-root-ca-cert-key.pem"/>
        <files mask="rsa-sha1-root-ca-cert.pem"/>
        <files mask="rsa-sha1-signer.crt.pem"/>
        <files mask="rsa-sha1-signer.key.pem"/>
        <files mask="rsa-sha256-signer.crt.pem"/>
        <files mask="rsa-sha256-signer.key.pem"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota/test_files" target_path="amazon-freertos/tests" type="binary">
        <files mask="payload.bin"/>
        <files mask="rsasigner.crt"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/pkcs11" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_pkcs11.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/posix" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_posix_clock.c"/>
        <files mask="aws_test_posix_mqueue.c"/>
        <files mask="aws_test_posix_pthread.c"/>
        <files mask="aws_test_posix_semaphore.c"/>
        <files mask="aws_test_posix_stress.c"/>
        <files mask="aws_test_posix_timer.c"/>
        <files mask="aws_test_posix_utils.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code" target_path="amazon-freertos/tests" type="src">
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code/nxp_code" target_path="amazon-freertos/tests" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code/nxp_code" target_path="amazon-freertos/tests" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/config_files" target_path="amazon-freertos/tests" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_pkcs11_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="debug">
        <files mask="aws_tests.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="project">
        <files mask="aws_tests.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="other">
        <files mask="aws_tests.eww"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/application_code" target_path="amazon-freertos/tests" type="src">
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/application_code/vendor_code" target_path="amazon-freertos/tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/config_files" target_path="amazon-freertos/tests" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_ota_config.h"/>
        <files mask="aws_test_pkcs11_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/ide" target_path="amazon-freertos/tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tls.LPC54608" name="amazon_freertos_tls" brief="tls" version="1.0.0" full_name="tls" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/tls" target_path="amazon-freertos/tls" type="src">
        <files mask="aws_tls.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.utils.LPC54608" name="amazon_freertos_utils" brief="utils" version="1.0.0" full_name="utils" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/utils" target_path="amazon-freertos/utils" type="src">
        <files mask="aws_system_init.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi.LPC54608" name="aws_iot_wifi" brief="aws_iot_wifi" version="1.0.0" full_name="aws_iot_wifi" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/vendor/board" target_path="amazon-freertos/wifi" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi_qca_400x.LPC54608" name="aws_iot_wifi_qca_400x" brief="wifi_qca_400x" version="1.0.0" full_name="aws_iot_wifi_qca_400x" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/nxp/qca_400x" target_path="amazon-freertos/wifi_qca_400x" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi_wiced.LPC54608" name="aws_iot_wifi_wiced" brief="aws_iot_wifi_wiced" version="1.0.0" full_name="aws_iot_wifi_wiced" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/nxp/wiced" target_path="amazon-freertos/wifi_wiced" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.LPC54608" name="Amazon-FreeRTOS" brief="Amazon FreeRTOS, Real Time Operating System" version="10.2.0" full_name="Amazon-FreeRTOS Kernel" devices="LPC54608J512" dependency="middleware.template_application.amazon_freertos.LPC54608" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="CHANGELOG.md"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos/license" type="other">
        <files mask="LICENSE"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS" target_path="amazon-freertos/freertos" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="core0_LPC54608J512">
        <files mask="port.c"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="core0_LPC54608J512">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable" target_path="amazon-freertos/freertos/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib" target_path="amazon-freertos/license" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/include" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="event_groups.h"/>
        <files mask="freertos_tasks_c_additions.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/include" type="c_include">
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
        <files mask="threading_alt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_posix.LPC54608" name="Amazon-FreeRTOS plus POSIX" brief="Amazon FreeRTOS plus POSIX" version="10.2.0" full_name="Amazon-FreeRTOS plus POSIX" devices="LPC54608J512" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX.h"/>
        <files mask="FreeRTOS_POSIX_internal.h"/>
        <files mask="FreeRTOS_POSIX_types.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable_default.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable/nxp/lpc54018iotmodule" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_POSIX_clock.c"/>
        <files mask="FreeRTOS_POSIX_mqueue.c"/>
        <files mask="FreeRTOS_POSIX_pthread.c"/>
        <files mask="FreeRTOS_POSIX_pthread_barrier.c"/>
        <files mask="FreeRTOS_POSIX_pthread_cond.c"/>
        <files mask="FreeRTOS_POSIX_pthread_mutex.c"/>
        <files mask="FreeRTOS_POSIX_sched.c"/>
        <files mask="FreeRTOS_POSIX_semaphore.c"/>
        <files mask="FreeRTOS_POSIX_timer.c"/>
        <files mask="FreeRTOS_POSIX_unistd.c"/>
        <files mask="FreeRTOS_POSIX_utils.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="errno.h"/>
        <files mask="fcntl.h"/>
        <files mask="mqueue.h"/>
        <files mask="pthread.h"/>
        <files mask="sched.h"/>
        <files mask="semaphore.h"/>
        <files mask="signal.h"/>
        <files mask="time.h"/>
        <files mask="unistd.h"/>
        <files mask="utils.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX/sys" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="types.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_tcp.LPC54608" name="Amazon-FreeRTOS plus TCP" brief="Amazon FreeRTOS plus TCP" version="10.2.0" full_name="Amazon-FreeRTOS plus TCP" devices="LPC54608J512" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOSIPConfigDefaults.h"/>
        <files mask="FreeRTOS_ARP.h"/>
        <files mask="FreeRTOS_DHCP.h"/>
        <files mask="FreeRTOS_DNS.h"/>
        <files mask="FreeRTOS_IP.h"/>
        <files mask="FreeRTOS_IP_Private.h"/>
        <files mask="FreeRTOS_Sockets.h"/>
        <files mask="FreeRTOS_Stream_Buffer.h"/>
        <files mask="FreeRTOS_TCP_IP.h"/>
        <files mask="FreeRTOS_TCP_WIN.h"/>
        <files mask="FreeRTOS_UDP_IP.h"/>
        <files mask="FreeRTOS_errno_TCP.h"/>
        <files mask="IPTraceMacroDefaults.h"/>
        <files mask="NetworkBufferManagement.h"/>
        <files mask="NetworkInterface.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_ARP.c"/>
        <files mask="FreeRTOS_DHCP.c"/>
        <files mask="FreeRTOS_DNS.c"/>
        <files mask="FreeRTOS_IP.c"/>
        <files mask="FreeRTOS_Sockets.c"/>
        <files mask="FreeRTOS_Stream_Buffer.c"/>
        <files mask="FreeRTOS_TCP_IP.c"/>
        <files mask="FreeRTOS_TCP_WIN.c"/>
        <files mask="FreeRTOS_UDP_IP.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/BufferManagement" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="BufferAllocation_1.c"/>
        <files mask="BufferAllocation_2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/GCC" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/IAR" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC17xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="README_DRIVER_DISCLAIMER.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_1.LPC54608" name="heap_1" brief="FreeRTOS heap_1 allocator" version="10.2.0" full_name="FreeRTOS_heap_1" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_2.LPC54608" name="heap_2" brief="FreeRTOS heap_2 allocator" version="10.2.0" full_name="FreeRTOS_heap_2" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_3.LPC54608" name="heap_3" brief="FreeRTOS heap_3 allocator" version="10.2.0" full_name="FreeRTOS_heap_3" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 platform.utilities.misc_utilities.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_4.LPC54608" name="heap_4" brief="FreeRTOS heap_4 allocator" version="10.2.0" full_name="FreeRTOS_heap_4" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_5.LPC54608" name="heap_5" brief="FreeRTOS heap_5 allocator" version="10.2.0" full_name="FreeRTOS_heap_5" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_newlib.LPC54608" name="heap_newlib" brief="FreeRTOS heap_newlib allocator" version="10.2.0" full_name="FreeRTOS_heap_newlib" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.LPC54608" name="amazon_freertos_third_party" brief="third_party" version="1.0.0" full_name="third_party" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party" target_path="amazon-freertos/third_party" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/mcu_vendor" target_path="amazon-freertos/third_party" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/mcu_vendor/vendor/driver_library/driver_library_version" target_path="amazon-freertos/third_party" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.cmock.LPC54608" name="amazon_freertos_cmock" brief="cmock" version="1.0.0" full_name="cmock" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/cmock" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmodules"/>
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="README.md"/>
        <files mask="config.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/config" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="production_environment.rb"/>
        <files mask="test_environment.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/docs" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="CMock_Summary.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/docs" target_path="amazon-freertos/third_party/cmock" type="doc">
        <files mask="license.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="foo.c"/>
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="foo.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/test" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="test_foo.c"/>
        <files mask="test_main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="gcc.yml"/>
        <files mask="iar_v4.yml"/>
        <files mask="iar_v5.yml"/>
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X256.h"/>
        <files mask="AdcConductor.h"/>
        <files mask="AdcHardware.h"/>
        <files mask="AdcHardwareConfigurator.h"/>
        <files mask="AdcModel.h"/>
        <files mask="AdcTemperatureSensor.h"/>
        <files mask="Executor.h"/>
        <files mask="IntrinsicsWrapper.h"/>
        <files mask="Main.h"/>
        <files mask="Model.h"/>
        <files mask="ModelConfig.h"/>
        <files mask="TaskScheduler.h"/>
        <files mask="TemperatureCalculator.h"/>
        <files mask="TemperatureFilter.h"/>
        <files mask="TimerConductor.h"/>
        <files mask="TimerConfigurator.h"/>
        <files mask="TimerHardware.h"/>
        <files mask="TimerInterruptConfigurator.h"/>
        <files mask="TimerInterruptHandler.h"/>
        <files mask="TimerModel.h"/>
        <files mask="Types.h"/>
        <files mask="UsartBaudRateRegisterCalculator.h"/>
        <files mask="UsartConductor.h"/>
        <files mask="UsartConfigurator.h"/>
        <files mask="UsartHardware.h"/>
        <files mask="UsartModel.h"/>
        <files mask="UsartPutChar.h"/>
        <files mask="UsartTransmitBufferStatus.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="AdcConductor.c"/>
        <files mask="AdcHardware.c"/>
        <files mask="AdcHardwareConfigurator.c"/>
        <files mask="AdcModel.c"/>
        <files mask="AdcTemperatureSensor.c"/>
        <files mask="Executor.c"/>
        <files mask="IntrinsicsWrapper.c"/>
        <files mask="Main.c"/>
        <files mask="Model.c"/>
        <files mask="TaskScheduler.c"/>
        <files mask="TemperatureCalculator.c"/>
        <files mask="TemperatureFilter.c"/>
        <files mask="TimerConductor.c"/>
        <files mask="TimerConfigurator.c"/>
        <files mask="TimerHardware.c"/>
        <files mask="TimerInterruptConfigurator.c"/>
        <files mask="TimerInterruptHandler.c"/>
        <files mask="TimerModel.c"/>
        <files mask="UsartBaudRateRegisterCalculator.c"/>
        <files mask="UsartConductor.c"/>
        <files mask="UsartConfigurator.c"/>
        <files mask="UsartHardware.c"/>
        <files mask="UsartModel.c"/>
        <files mask="UsartPutChar.c"/>
        <files mask="UsartTransmitBufferStatus.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/test" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="TestAdcConductor.c"/>
        <files mask="TestAdcHardware.c"/>
        <files mask="TestAdcHardwareConfigurator.c"/>
        <files mask="TestAdcModel.c"/>
        <files mask="TestAdcTemperatureSensor.c"/>
        <files mask="TestExecutor.c"/>
        <files mask="TestMain.c"/>
        <files mask="TestModel.c"/>
        <files mask="TestTaskScheduler.c"/>
        <files mask="TestTemperatureCalculator.c"/>
        <files mask="TestTemperatureFilter.c"/>
        <files mask="TestTimerConductor.c"/>
        <files mask="TestTimerConfigurator.c"/>
        <files mask="TestTimerHardware.c"/>
        <files mask="TestTimerInterruptConfigurator.c"/>
        <files mask="TestTimerInterruptHandler.c"/>
        <files mask="TestTimerModel.c"/>
        <files mask="TestUsartBaudRateRegisterCalculator.c"/>
        <files mask="TestUsartConductor.c"/>
        <files mask="TestUsartConfigurator.c"/>
        <files mask="TestUsartHardware.c"/>
        <files mask="TestUsartModel.c"/>
        <files mask="TestUsartPutChar.c"/>
        <files mask="TestUsartTransmitBufferStatus.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock.rb"/>
        <files mask="cmock_config.rb"/>
        <files mask="cmock_file_writer.rb"/>
        <files mask="cmock_generator.rb"/>
        <files mask="cmock_generator_plugin_array.rb"/>
        <files mask="cmock_generator_plugin_callback.rb"/>
        <files mask="cmock_generator_plugin_cexception.rb"/>
        <files mask="cmock_generator_plugin_expect.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args.rb"/>
        <files mask="cmock_generator_plugin_ignore.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr.rb"/>
        <files mask="cmock_generator_utils.rb"/>
        <files mask="cmock_header_parser.rb"/>
        <files mask="cmock_plugin_manager.rb"/>
        <files mask="cmock_unityhelper_parser.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/release" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/scripts" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="create_makefile.rb"/>
        <files mask="create_mock.rb"/>
        <files mask="create_runner.rb"/>
        <files mask="test_summary.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="cmock.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="cmock.h"/>
        <files mask="cmock_internals.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/c" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="TestCMockC.c"/>
        <files mask="TestCMockCDynamic.c"/>
        <files mask="TestCMockCDynamic_Runner.c"/>
        <files mask="TestCMockC_Runner.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/c" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="TestCMockC.yml"/>
        <files mask="TestCMockCDynamic.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/Resource" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
        <files mask="at91SAM7X256_FLASH.xcl"/>
        <files mask="at91SAM7X256_RAM.xcl"/>
        <files mask="ioat91sam7x256.ddf"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/incIAR" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="ioat91sam7x256.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/incIAR" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="AT91SAM7X256.inc"/>
        <files mask="AT91SAM7X256.rdf"/>
        <files mask="AT91SAM7X256.tcl"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="script">
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="configuration">
        <files mask="cmock_demo.dni"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/srcIAR" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Cstartup.s79"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/srcIAR" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/Resource" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/Resource" target_path="amazon-freertos/third_party/cmock" type="linker">
        <files mask="at91SAM7X256_FLASH.icf"/>
        <files mask="at91SAM7X256_RAM.icf"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/incIAR" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
        <files mask="project.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="script">
        <files mask="BasicInterrupt_SAM7X.cspy.bat"/>
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="BasicInterrupt_SAM7X.dbgdt"/>
        <files mask="BasicInterrupt_SAM7X.wsdt"/>
        <files mask="BasicInterrupt_SAM7X_FLASH_Debug.jlink"/>
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
        <files mask="cmock_demo_Binary.jlink"/>
        <files mask="cmock_demo_FLASH_Debug.jlink"/>
        <files mask="cmock_demo_RAM_Debug.jlink"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="configuration">
        <files mask="BasicInterrupt_SAM7X.dni"/>
        <files mask="cmock_demo.dni"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/srcIAR" target_path="amazon-freertos/third_party/cmock" type="asm_include">
        <files mask="Cstartup.s"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/srcIAR" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="test_helper.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="systest_generator.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_compilation" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="callingconv.h"/>
        <files mask="const.h"/>
        <files mask="osek.h"/>
        <files mask="parsing.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_compilation" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="config.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_interactions" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="all_plugins_but_other_limits.yml"/>
        <files mask="all_plugins_coexist.yml"/>
        <files mask="array_and_pointer_handling.yml"/>
        <files mask="basic_expect_and_return.yml"/>
        <files mask="const_primitives_handling.yml"/>
        <files mask="doesnt_leave_details_behind.yml"/>
        <files mask="enforce_strict_ordering.yml"/>
        <files mask="expect_and_return_custom_types.yml"/>
        <files mask="expect_and_return_treat_as.yml"/>
        <files mask="expect_and_throw.yml"/>
        <files mask="expect_any_args.yml"/>
        <files mask="fancy_pointer_handling.yml"/>
        <files mask="function_pointer_handling.yml"/>
        <files mask="ignore_and_return.yml"/>
        <files mask="ignore_strict_mock_calling.yml"/>
        <files mask="newer_standards_stuff1.yml"/>
        <files mask="nonstandard_parsed_stuff_1.yml"/>
        <files mask="nonstandard_parsed_stuff_2.yml"/>
        <files mask="out_of_memory.yml"/>
        <files mask="parsing_challenges.yml"/>
        <files mask="return_thru_ptr_and_expect_any_args.yml"/>
        <files mask="return_thru_ptr_ignore_arg.yml"/>
        <files mask="struct_union_enum_expect_and_return.yml"/>
        <files mask="struct_union_enum_expect_and_return_with_plugins.yml"/>
        <files mask="stubs_with_callbacks.yml"/>
        <files mask="unity_64bit_support.yml"/>
        <files mask="unity_ignores.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/targets" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="clang_strict.yml"/>
        <files mask="gcc.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_tiny.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/unit" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_config_test.rb"/>
        <files mask="cmock_config_test.yml"/>
        <files mask="cmock_file_writer_test.rb"/>
        <files mask="cmock_generator_main_test.rb"/>
        <files mask="cmock_generator_plugin_array_test.rb"/>
        <files mask="cmock_generator_plugin_callback_test.rb"/>
        <files mask="cmock_generator_plugin_cexception_test.rb"/>
        <files mask="cmock_generator_plugin_expect_a_test.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args_test.rb"/>
        <files mask="cmock_generator_plugin_expect_b_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_test.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr_test.rb"/>
        <files mask="cmock_generator_utils_test.rb"/>
        <files mask="cmock_header_parser_test.rb"/>
        <files mask="cmock_plugin_manager_test.rb"/>
        <files mask="cmock_unityhelper_parser_test.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors" target_path="amazon-freertos/third_party/cmock" type="doc">
        <files mask="Manifest.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Rakefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="behaviors.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/lib/behaviors" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="reporttask.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="behaviors_tasks_test.rb"/>
        <files mask="behaviors_test.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Rakefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="user.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="user_test.rb"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.jsmn.LPC54608" name="amazon_freertos_jsmn" brief="jsmn" version="1.0.0" full_name="jsmn" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/jsmn" target_path="amazon-freertos/third_party/jsmn" type="src">
        <files mask="jsmn.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/jsmn" target_path="amazon-freertos/third_party/jsmn" type="c_include">
        <files mask="jsmn.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.pkcs11.LPC54608" name="amazon_freertos_pkcs11" brief="pkcs11" version="1.0.0" full_name="pkcs11" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/pkcs11" target_path="amazon-freertos/third_party/pkcs11" type="c_include">
        <files mask="pkcs11.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11t.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tinycbor.LPC54608" name="amazon_freertos_tinycbor" brief="tinycbor" version="1.0.0" full_name="tinycbor" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="other">
        <files mask="LICENSE"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="c_include">
        <files mask="assert_p.h"/>
        <files mask="cbor.h"/>
        <files mask="cborconstants_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="extract_number_p.h"/>
        <files mask="math_support_p.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
        <files mask="cborparser_dup_string.c"/>
        <files mask="cborpretty.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tinycrypt.LPC54608" name="amazon_freertos_tinycrypt" brief="tinycrypt" version="1.0.0" full_name="tinycrypt" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README"/>
        <files mask="VERSION"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/asn1" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="asn1.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/asn1" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="asn1parse.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="script">
        <files mask="config.mk"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/documentation" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="tinycrypt.rst"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib/include/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dh.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="ecc_platform_specific.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib/source" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dh.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="ecc_platform_specific.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests/include" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="test_ecc_utils.h"/>
        <files mask="test_utils.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="binary">
        <files mask="pseudo-random-data.bin"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="test_aes.c"/>
        <files mask="test_cbc_mode.c"/>
        <files mask="test_ccm_mode.c"/>
        <files mask="test_cmac_mode.c"/>
        <files mask="test_ctr_mode.c"/>
        <files mask="test_ctr_prng.c"/>
        <files mask="test_ecc_dh.c"/>
        <files mask="test_ecc_dsa.c"/>
        <files mask="test_ecc_utils.c"/>
        <files mask="test_hmac.c"/>
        <files mask="test_hmac_prng.c"/>
        <files mask="test_sha256.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tracealyzer_recorder.LPC54608" name="amazon_freertos_tracealyzer_recorder" brief="tracealyzer_recorder" version="1.0.0" full_name="tracealyzer_recorder" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/Include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcHardwarePort.h"/>
        <files mask="trcKernelPort.h"/>
        <files mask="trcPortDefines.h"/>
        <files mask="trcRecorder.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/config" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="trcStreamingConfig.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_Printf.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="SEGGER_RTT.h"/>
        <files mask="SEGGER_RTT_Conf.h"/>
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcKernelPort.c"/>
        <files mask="trcSnapshotRecorder.c"/>
        <files mask="trcStreamingRecorder.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.unity.LPC54608" name="amazon_freertos_unity" brief="unity" version="1.0.0" full_name="unity" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask=".gitattributes"/>
        <files mask=".travis.yml"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/auto" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/auto" target_path="amazon-freertos/third_party/unity" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
        <files mask="license.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/test/test_runners" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/test/test_runners" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="all_tests.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/helper" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/helper" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/eclipse" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test/main" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/release" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="unity.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/expectdata" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/expectdata" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/spec" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/targets" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/testdata" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="CException.h"/>
        <files mask="Defs.h"/>
        <files mask="cmock.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/testdata" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/tests" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/tests" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.win_pcap.LPC54608" name="amazon_freertos_win_pcap" brief="win_pcap" version="1.0.0" full_name="win_pcap" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap" target_path="amazon-freertos/third_party/win_pcap" type="c_include">
        <files mask="Packet32.h"/>
        <files mask="PacketData.h"/>
        <files mask="Win32-Extensions.h"/>
        <files mask="bittypes.h"/>
        <files mask="ip6_misc.h"/>
        <files mask="pcap-bpf.h"/>
        <files mask="pcap-namedb.h"/>
        <files mask="pcap-stdinc.h"/>
        <files mask="pcap.h"/>
        <files mask="remote-ext.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap" target_path="amazon-freertos/third_party/win_pcap" type="lib">
        <files mask="libwpcap.a"/>
        <files mask="wpcap.lib"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap/pcap" target_path="amazon-freertos/third_party/win_pcap" type="c_include">
        <files mask="bluetooth.h"/>
        <files mask="bpf.h"/>
        <files mask="namedb.h"/>
        <files mask="pcap.h"/>
        <files mask="sll.h"/>
        <files mask="usb.h"/>
        <files mask="vlan.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.aws_config_quick_start.LPC54608" name="amazon_freertos_aws_config_quick_start" brief="aws_config_quick_start" version="1.0.0" full_name="aws_config_quick_start" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/aws_config_quick_start" target_path="amazon-freertos/tools/aws_config_quick_start" type="other">
        <files mask="README.md"/>
        <files mask="aws_clientcredential.templ"/>
        <files mask="aws_clientcredential_keys.templ"/>
        <files mask="configure.json"/>
        <files mask="policy_document.templ"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/aws_config_quick_start" target_path="amazon-freertos/tools/aws_config_quick_start" type="script">
        <files mask="SetupAWS.py"/>
        <files mask="certs.py"/>
        <files mask="misc.py"/>
        <files mask="policy.py"/>
        <files mask="thing.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.certificate_configuration.LPC54608" name="amazon_freertos_certificate_configuration" brief="certificate_configuration" version="1.0.0" full_name="certificate_configuration" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/certificate_configuration" target_path="amazon-freertos/tools/certificate_configuration" type="doc">
        <files mask="CertificateConfigurator.html"/>
        <files mask="PEMfileToCString.html"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/certificate_configuration/js" target_path="amazon-freertos/tools/certificate_configuration" type="script">
        <files mask="generator.js"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.checks.LPC54608" name="amazon_freertos_checks" brief="checks" version="1.0.0" full_name="checks" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check" target_path="amazon-freertos/tools/checks" type="other">
        <files mask="README.md"/>
        <files mask="license.templ"/>
        <files mask="rules.json"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/src" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="__init__.py"/>
        <files mask="afqp_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="other">
        <files mask=".cproject_compliant"/>
        <files mask=".cproject_four_different_roots"/>
        <files mask=".project_compliant"/>
        <files mask=".project_invalid_project_name"/>
        <files mask=".project_multiple_roots"/>
        <files mask=".project_seven_missing_locationURI"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="c_include">
        <files mask="license_test_0.h"/>
        <files mask="license_test_1.h"/>
        <files mask="license_test_unmatching.h"/>
        <files mask="missing_platform_name.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="test_afqp_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check" target_path="amazon-freertos/tools/checks" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmessage"/>
        <files mask="readme.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/src" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="__init__.py"/>
        <files mask="hn_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/test" target_path="amazon-freertos/tools/checks" type="src">
        <files mask="source_file.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/test" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="test_hn_check.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.echo_server.LPC54608" name="amazon_freertos_echo_server" brief="echo_server" version="1.0.0" full_name="echo_server" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/echo_server" target_path="amazon-freertos/tools/echo_server" type="other">
        <files mask="echo_server.go"/>
        <files mask="tls_echo_server.go"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/echo_server" target_path="amazon-freertos/tools/echo_server" type="doc">
        <files mask="readme-gencert.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.git.LPC54608" name="amazon_freertos_git" brief="git" version="1.0.0" full_name="git" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks" target_path="amazon-freertos/tools/git" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmessage"/>
        <files mask="README.md"/>
        <files mask="install_hooks.ps1"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks" target_path="amazon-freertos/tools/git" type="script">
        <files mask="install_hooks.sh"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/src" target_path="amazon-freertos/tools/git" type="script">
        <files mask="__init__.py"/>
        <files mask="commit_msg.py"/>
        <files mask="pre_commit.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="other">
        <files mask="bad_label.md"/>
        <files mask="long_body_line.md"/>
        <files mask="long_subject.md"/>
        <files mask="merge_commit.md"/>
        <files mask="no_sep.md"/>
        <files mask="valid_commit.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="src">
        <files mask="clean.c"/>
        <files mask="unformatted.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="script">
        <files mask="test_commit_msg.py"/>
        <files mask="test_pre_commit.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.ota_e2e_tests.LPC54608" name="amazon_freertos_aws_ota_test" brief="aws_ota_test" version="1.0.0" full_name="aws_ota_test" devices="LPC54608J512" dependency="middleware.amazon_freertos.aws_iot.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.mbedtls.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.template_application.mbedtls.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests" target_path="amazon-freertos/tools/ota_e2e_tests" type="other">
        <files mask="README.md"/>
        <files mask="board.json"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests/aws_ota_test" target_path="amazon-freertos/tools/ota_e2e_tests" type="script">
        <files mask="__init__.py"/>
        <files mask="aws_flash_serial_comm.py"/>
        <files mask="aws_ota_aws_agent.py"/>
        <files mask="aws_ota_project.py"/>
        <files mask="aws_ota_test_case.py"/>
        <files mask="aws_ota_test_case_back_to_back_downloads.py"/>
        <files mask="aws_ota_test_case_corrupt_image_after_signing.py"/>
        <files mask="aws_ota_test_case_corrupt_image_before_signing.py"/>
        <files mask="aws_ota_test_case_corrupt_signature.py"/>
        <files mask="aws_ota_test_case_dummy_test.py"/>
        <files mask="aws_ota_test_case_factory.py"/>
        <files mask="aws_ota_test_case_greater_version.py"/>
        <files mask="aws_ota_test_case_incorrect_platform.py"/>
        <files mask="aws_ota_test_case_incorrect_wifi_password.py"/>
        <files mask="aws_ota_test_case_missing_filename.py"/>
        <files mask="aws_ota_test_case_previous_version.py"/>
        <files mask="aws_ota_test_case_same_version.py"/>
        <files mask="aws_ota_test_case_single_byte_image.py"/>
        <files mask="aws_ota_test_case_unsigned_image.py"/>
        <files mask="aws_ota_test_case_untrusted_certificate.py"/>
        <files mask="aws_ota_test_main.py"/>
        <files mask="aws_ota_test_result.py"/>
        <files mask="aws_ota_test_runner.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests/credentials" target_path="amazon-freertos/tools/ota_e2e_tests" type="other">
        <files mask="untrusted-ecdsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-ecdsa-sha256-signer.key.pem"/>
        <files mask="untrusted-rsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-rsa-sha256-signer.key.pem"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests" target_path="amazon-freertos/tools/ota_e2e_tests" type="script">
        <files mask="ota_e2e.py"/>
      </source>
    </component>
    <component id="middleware.baremetal.LPC54608" name="baremetal" version="1.0.0" full_name="Baremetal" devices="LPC54608J512" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.emwin.LPC54608" name="emwin" brief="emWin library" version="5.48" devices="LPC54608J512" dependency="middleware.template_application.emwin.LPC54608" category="Graphics/emWin graphics library" user_visible="true" type="middleware">
      <source exclude="true" path="middleware/emwin" target_path="emwin" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/emwin/emWin_Config" target_path="emwin/emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source path="middleware/emwin/emWin_header" target_path="emwin/emWin_header" type="c_include">
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Intern.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source toolchain="mdk" path="middleware/emwin/emWin_library/Keil" target_path="emwin/emWin_library/Keil" type="lib" device_cores="core0_LPC54608J512">
        <files mask="emWin_M4F.lib"/>
      </source>
    </component>
    <component id="middleware.fatfs.LPC54608" name="fatfs" brief="FatFs" version="0.13.1" revision="0" full_name="FAT File System stack" devices="LPC54608J512" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
        <files mask="integer.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.mmc.LPC54608" name="mmc" brief="FatFs_MMC" version="0.13" full_name="Fatfs MMC layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608 middleware.sdmmc.common.LPC54608 middleware.sdmmc.mmc.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.nand.LPC54608" name="nand" brief="FatFs_NAND" version="0.13" full_name="Fatfs NAND layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.ram.LPC54608" name="ram" brief="FatFs_RAM" version="0.13" full_name="Fatfs RAM layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.sd.LPC54608" name="sd" brief="FatFs_SD" version="0.13" full_name="Fatfs SD layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608 middleware.sdmmc.common.LPC54608 middleware.sdmmc.sd.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.unused_files.LPC54608" name="unused_files" brief="fatfs files unused by projects" version="3.9.8" revision="3" devices="LPC54608J512" user_visible="false" type="other">
      <source exclude="true" path="middleware/fatfs" target_path="fatfs/fatfs_files" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00index_e.html"/>
        <files mask="css_e.css"/>
        <files mask="updates.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/doc" target_path="fatfs/fatfs_files" type="doc">
        <files mask="appnote.html"/>
        <files mask="chdir.html"/>
        <files mask="chdrive.html"/>
        <files mask="chmod.html"/>
        <files mask="close.html"/>
        <files mask="closedir.html"/>
        <files mask="config.html"/>
        <files mask="dinit.html"/>
        <files mask="dioctl.html"/>
        <files mask="dread.html"/>
        <files mask="dstat.html"/>
        <files mask="dwrite.html"/>
        <files mask="eof.html"/>
        <files mask="error.html"/>
        <files mask="expand.html"/>
        <files mask="fattime.html"/>
        <files mask="fdisk.html"/>
        <files mask="filename.html"/>
        <files mask="findfirst.html"/>
        <files mask="findnext.html"/>
        <files mask="forward.html"/>
        <files mask="getcwd.html"/>
        <files mask="getfree.html"/>
        <files mask="getlabel.html"/>
        <files mask="gets.html"/>
        <files mask="lseek.html"/>
        <files mask="mkdir.html"/>
        <files mask="mkfs.html"/>
        <files mask="mount.html"/>
        <files mask="open.html"/>
        <files mask="opendir.html"/>
        <files mask="printf.html"/>
        <files mask="putc.html"/>
        <files mask="puts.html"/>
        <files mask="rc.html"/>
        <files mask="read.html"/>
        <files mask="readdir.html"/>
        <files mask="rename.html"/>
        <files mask="sdir.html"/>
        <files mask="setcp.html"/>
        <files mask="setlabel.html"/>
        <files mask="sfatfs.html"/>
        <files mask="sfile.html"/>
        <files mask="sfileinfo.html"/>
        <files mask="size.html"/>
        <files mask="stat.html"/>
        <files mask="sync.html"/>
        <files mask="tell.html"/>
        <files mask="truncate.html"/>
        <files mask="unlink.html"/>
        <files mask="utime.html"/>
        <files mask="write.html"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="src">
        <files mask="app1.c"/>
        <files mask="app2.c"/>
        <files mask="app3.c"/>
        <files mask="app4.c"/>
        <files mask="app5.c"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="image">
        <files mask="f1.png"/>
        <files mask="f2.png"/>
        <files mask="f3.png"/>
        <files mask="f4.png"/>
        <files mask="f5.png"/>
        <files mask="f6.png"/>
        <files mask="f7.png"/>
        <files mask="funcs.png"/>
        <files mask="layers.png"/>
        <files mask="layers1.png"/>
        <files mask="layers2.png"/>
        <files mask="layers3.png"/>
        <files mask="modules.png"/>
        <files mask="rwtest1.png"/>
        <files mask="rwtest2.png"/>
        <files mask="rwtest3.png"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="archive">
        <files mask="mkfatimg.zip"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="doc">
        <files mask="mkfs.xls"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00history.txt"/>
        <files mask="00readme.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="c_include">
        <files mask="ffconf_template.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb_bm.LPC54608" name="usb_bm" brief="FatFs_USB_baremetal" version="0.13" full_name="Fatfs USB baremetal layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608 middleware.usb.host.LPC54608 middleware.usb.host_hub.LPC54608 middleware.usb.host_msd.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb_freertos.LPC54608" name="usb_freertos" brief="FatFs_USB_freertos" version="0.13" full_name="Fatfs USB freertos layer" devices="LPC54608J512" dependency="middleware.fatfs.LPC54608 middleware.usb.host.LPC54608 middleware.usb.host_hub.LPC54608 middleware.usb.host_msd.LPC54608" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
    </component>
    <component id="middleware.mbedtls.LPC54608" name="mbedtls" brief="mbedTLS library" version="2.13.1" devices="LPC54608J512" dependency="middleware.template_application.mbedtls.LPC54608" category="Security/mbedTLS library" user_visible="true" type="middleware">
      <source path="middleware/mbedtls/include/mbedtls" target_path="mbedtls/include/mbedtls" type="src">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="md_internal.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="pkcs5.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source path="middleware/mbedtls/library" target_path="mbedtls/library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="md_wrap.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="src">
        <files mask="aes_alt.c"/>
        <files mask="des_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ksdk_mbedtls.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="c_include">
        <files mask="aes_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
      </source>
      <include_paths>
        <include_path path="mbedtls/include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.LPC54608" name="unused_files" brief="mbedTLS files unused by projects" version="2.13.1" devices="LPC54608J512" category="Security/mbedTLS library" user_visible="false" type="other">
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="other">
        <files mask=".gitignore"/>
        <files mask=".travis.yml"/>
        <files mask="ChangeLog"/>
        <files mask="DartConfiguration.tcl"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
        <files mask="circle.yml"/>
      </source>
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="apache-2.0.txt"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="doc">
        <files mask="README.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h"/>
        <files mask="config-mini-tls1_1.h"/>
        <files mask="config-no-entropy.h"/>
        <files mask="config-suite-b.h"/>
        <files mask="config-thread.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen/input" target_path="mbedtls/doxygen/input" type="c_include">
        <files mask="doc_encdec.h"/>
        <files mask="doc_hashing.h"/>
        <files mask="doc_mainpage.h"/>
        <files mask="doc_rng.h"/>
        <files mask="doc_ssltls.h"/>
        <files mask="doc_tcpip.h"/>
        <files mask="doc_x509.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen" target_path="mbedtls/doxygen" type="other">
        <files mask="mbedtls.doxyfile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="other">
        <files mask=".gitignore"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="other">
        <files mask=".gitignore"/>
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs" target_path="mbedtls/programs" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="src">
        <files mask="aescrypt2.c"/>
        <files mask="crypt_and_hash.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="src">
        <files mask="generic_sum.c"/>
        <files mask="hello.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="dh_prime.txt"/>
        <files mask="rsa_priv.txt"/>
        <files mask="rsa_pub.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="src">
        <files mask="dh_client.c"/>
        <files mask="dh_genprime.c"/>
        <files mask="dh_server.c"/>
        <files mask="ecdh_curve25519.c"/>
        <files mask="ecdsa.c"/>
        <files mask="gen_key.c"/>
        <files mask="key_app.c"/>
        <files mask="key_app_writer.c"/>
        <files mask="mpi_demo.c"/>
        <files mask="pk_decrypt.c"/>
        <files mask="pk_encrypt.c"/>
        <files mask="pk_sign.c"/>
        <files mask="pk_verify.c"/>
        <files mask="rsa_decrypt.c"/>
        <files mask="rsa_encrypt.c"/>
        <files mask="rsa_genkey.c"/>
        <files mask="rsa_sign.c"/>
        <files mask="rsa_sign_pss.c"/>
        <files mask="rsa_verify.c"/>
        <files mask="rsa_verify_pss.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="src">
        <files mask="gen_entropy.c"/>
        <files mask="gen_random_ctr_drbg.c"/>
        <files mask="gen_random_havege.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="src">
        <files mask="dtls_client.c"/>
        <files mask="dtls_server.c"/>
        <files mask="mini_client.c"/>
        <files mask="ssl_client1.c"/>
        <files mask="ssl_client2.c"/>
        <files mask="ssl_fork_server.c"/>
        <files mask="ssl_mail_client.c"/>
        <files mask="ssl_pthread_server.c"/>
        <files mask="ssl_server.c"/>
        <files mask="ssl_server2.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="src">
        <files mask="benchmark.c"/>
        <files mask="cpp_dummy_build.cpp"/>
        <files mask="selftest.c"/>
        <files mask="ssl_cert_test.c"/>
        <files mask="udp_proxy.c"/>
        <files mask="zeroize.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="src">
        <files mask="pem2der.c"/>
        <files mask="strerror.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="src">
        <files mask="cert_app.c"/>
        <files mask="cert_req.c"/>
        <files mask="cert_write.c"/>
        <files mask="crl_app.c"/>
        <files mask="req_app.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="script">
        <files mask="abi_check.py"/>
        <files mask="apidoc_full.sh"/>
        <files mask="bump_version.sh"/>
        <files mask="ecc-heap.sh"/>
        <files mask="footprint.sh"/>
        <files mask="memory.sh"/>
        <files mask="output_env.sh"/>
        <files mask="tmp_ignore_makefiles.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="other">
        <files mask="config.pl"/>
        <files mask="find-mem-leak.cocci"/>
        <files mask="generate_errors.pl"/>
        <files mask="generate_features.pl"/>
        <files mask="generate_visualc_files.pl"/>
        <files mask="massif_max.pl"/>
        <files mask="rename.pl"/>
        <files mask="rm-calloc-cast.cocci"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="other">
        <files mask="error.fmt"/>
        <files mask="version_features.fmt"/>
        <files mask="vs2010-app-template.vcxproj"/>
        <files mask="vs2010-main-template.vcxproj"/>
        <files mask="vs2010-sln-template.sln"/>
        <files mask="vs6-app-template.dsp"/>
        <files mask="vs6-main-template.dsp"/>
        <files mask="vs6-workspace-template.dsw"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests" target_path="mbedtls/tests" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files" target_path="mbedtls/tests/data_files" type="other">
        <files mask="Makefile"/>
        <files mask="hash_file_1"/>
        <files mask="hash_file_2"/>
        <files mask="hash_file_3"/>
        <files mask="hash_file_4"/>
        <files mask="hash_file_5"/>
        <files mask="mpi_10"/>
        <files mask="mpi_too_big"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir3" target_path="mbedtls/tests/data_files/dir3" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir4" target_path="mbedtls/tests/data_files/dir4" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="script">
        <files mask="pre-push.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="script">
        <files mask="all.sh"/>
        <files mask="basic-build-test.sh"/>
        <files mask="check-files.py"/>
        <files mask="check-generated-files.sh"/>
        <files mask="check-names.sh"/>
        <files mask="check-python-files.sh"/>
        <files mask="doxygen.sh"/>
        <files mask="generate-afl-tests.sh"/>
        <files mask="generate_test_code.py"/>
        <files mask="list-identifiers.sh"/>
        <files mask="list-macros.sh"/>
        <files mask="list-symbols.sh"/>
        <files mask="mbedtls_test.py"/>
        <files mask="test_generate_test_code.py"/>
        <files mask="travis-log-failure.sh"/>
        <files mask="yotta-build.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="other">
        <files mask="check-doxy-blocks.pl"/>
        <files mask="curves.pl"/>
        <files mask="depends-hashes.pl"/>
        <files mask="depends-pkalgs.pl"/>
        <files mask="gen_ctr_drbg.pl"/>
        <files mask="gen_gcm_decrypt.pl"/>
        <files mask="gen_gcm_encrypt.pl"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl"/>
        <files mask="key-exchanges.pl"/>
        <files mask="list-enum-consts.pl"/>
        <files mask="recursion.pl"/>
        <files mask="run-test-suites.pl"/>
        <files mask="tcp_client.pl"/>
        <files mask="test-ref-configs.pl"/>
        <files mask="test_zeroize.gdb"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/suites" target_path="mbedtls/tests/suites" type="other">
        <files mask="helpers.function"/>
        <files mask="host_test.function"/>
        <files mask="main_test.function"/>
        <files mask="target_test.function"/>
        <files mask="test_suite_aes.cbc.data"/>
        <files mask="test_suite_aes.cfb.data"/>
        <files mask="test_suite_aes.ecb.data"/>
        <files mask="test_suite_aes.function"/>
        <files mask="test_suite_aes.ofb.data"/>
        <files mask="test_suite_aes.rest.data"/>
        <files mask="test_suite_aes.xts.data"/>
        <files mask="test_suite_arc4.data"/>
        <files mask="test_suite_arc4.function"/>
        <files mask="test_suite_aria.data"/>
        <files mask="test_suite_aria.function"/>
        <files mask="test_suite_asn1write.data"/>
        <files mask="test_suite_asn1write.function"/>
        <files mask="test_suite_base64.data"/>
        <files mask="test_suite_base64.function"/>
        <files mask="test_suite_blowfish.data"/>
        <files mask="test_suite_blowfish.function"/>
        <files mask="test_suite_camellia.data"/>
        <files mask="test_suite_camellia.function"/>
        <files mask="test_suite_ccm.data"/>
        <files mask="test_suite_ccm.function"/>
        <files mask="test_suite_chacha20.data"/>
        <files mask="test_suite_chacha20.function"/>
        <files mask="test_suite_chachapoly.data"/>
        <files mask="test_suite_chachapoly.function"/>
        <files mask="test_suite_cipher.aes.data"/>
        <files mask="test_suite_cipher.arc4.data"/>
        <files mask="test_suite_cipher.blowfish.data"/>
        <files mask="test_suite_cipher.camellia.data"/>
        <files mask="test_suite_cipher.ccm.data"/>
        <files mask="test_suite_cipher.chacha20.data"/>
        <files mask="test_suite_cipher.chachapoly.data"/>
        <files mask="test_suite_cipher.des.data"/>
        <files mask="test_suite_cipher.function"/>
        <files mask="test_suite_cipher.gcm.data"/>
        <files mask="test_suite_cipher.null.data"/>
        <files mask="test_suite_cipher.padding.data"/>
        <files mask="test_suite_cmac.data"/>
        <files mask="test_suite_cmac.function"/>
        <files mask="test_suite_ctr_drbg.data"/>
        <files mask="test_suite_ctr_drbg.function"/>
        <files mask="test_suite_debug.data"/>
        <files mask="test_suite_debug.function"/>
        <files mask="test_suite_des.data"/>
        <files mask="test_suite_des.function"/>
        <files mask="test_suite_dhm.data"/>
        <files mask="test_suite_dhm.function"/>
        <files mask="test_suite_ecdh.data"/>
        <files mask="test_suite_ecdh.function"/>
        <files mask="test_suite_ecdsa.data"/>
        <files mask="test_suite_ecdsa.function"/>
        <files mask="test_suite_ecjpake.data"/>
        <files mask="test_suite_ecjpake.function"/>
        <files mask="test_suite_ecp.data"/>
        <files mask="test_suite_ecp.function"/>
        <files mask="test_suite_entropy.data"/>
        <files mask="test_suite_entropy.function"/>
        <files mask="test_suite_error.data"/>
        <files mask="test_suite_error.function"/>
        <files mask="test_suite_gcm.aes128_de.data"/>
        <files mask="test_suite_gcm.aes128_en.data"/>
        <files mask="test_suite_gcm.aes192_de.data"/>
        <files mask="test_suite_gcm.aes192_en.data"/>
        <files mask="test_suite_gcm.aes256_de.data"/>
        <files mask="test_suite_gcm.aes256_en.data"/>
        <files mask="test_suite_gcm.camellia.data"/>
        <files mask="test_suite_gcm.function"/>
        <files mask="test_suite_hkdf.data"/>
        <files mask="test_suite_hkdf.function"/>
        <files mask="test_suite_hmac_drbg.function"/>
        <files mask="test_suite_hmac_drbg.misc.data"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data"/>
        <files mask="test_suite_hmac_drbg.nopr.data"/>
        <files mask="test_suite_hmac_drbg.pr.data"/>
        <files mask="test_suite_md.data"/>
        <files mask="test_suite_md.function"/>
        <files mask="test_suite_mdx.data"/>
        <files mask="test_suite_mdx.function"/>
        <files mask="test_suite_memory_buffer_alloc.data"/>
        <files mask="test_suite_memory_buffer_alloc.function"/>
        <files mask="test_suite_mpi.data"/>
        <files mask="test_suite_mpi.function"/>
        <files mask="test_suite_nist_kw.data"/>
        <files mask="test_suite_nist_kw.function"/>
        <files mask="test_suite_pem.data"/>
        <files mask="test_suite_pem.function"/>
        <files mask="test_suite_pk.data"/>
        <files mask="test_suite_pk.function"/>
        <files mask="test_suite_pkcs1_v15.data"/>
        <files mask="test_suite_pkcs1_v15.function"/>
        <files mask="test_suite_pkcs1_v21.data"/>
        <files mask="test_suite_pkcs1_v21.function"/>
        <files mask="test_suite_pkcs5.data"/>
        <files mask="test_suite_pkcs5.function"/>
        <files mask="test_suite_pkparse.data"/>
        <files mask="test_suite_pkparse.function"/>
        <files mask="test_suite_pkwrite.data"/>
        <files mask="test_suite_pkwrite.function"/>
        <files mask="test_suite_poly1305.data"/>
        <files mask="test_suite_poly1305.function"/>
        <files mask="test_suite_rsa.data"/>
        <files mask="test_suite_rsa.function"/>
        <files mask="test_suite_shax.data"/>
        <files mask="test_suite_shax.function"/>
        <files mask="test_suite_ssl.data"/>
        <files mask="test_suite_ssl.function"/>
        <files mask="test_suite_timing.data"/>
        <files mask="test_suite_timing.function"/>
        <files mask="test_suite_version.data"/>
        <files mask="test_suite_version.function"/>
        <files mask="test_suite_x509parse.data"/>
        <files mask="test_suite_x509parse.function"/>
        <files mask="test_suite_x509write.data"/>
        <files mask="test_suite_x509write.function"/>
        <files mask="test_suite_xtea.data"/>
        <files mask="test_suite_xtea.function"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/visualc/VS2010" target_path="mbedtls/visualc/VS2010" type="other">
        <files mask="aescrypt2.vcxproj"/>
        <files mask="benchmark.vcxproj"/>
        <files mask="cert_app.vcxproj"/>
        <files mask="cert_req.vcxproj"/>
        <files mask="cert_write.vcxproj"/>
        <files mask="crl_app.vcxproj"/>
        <files mask="crypt_and_hash.vcxproj"/>
        <files mask="dh_client.vcxproj"/>
        <files mask="dh_genprime.vcxproj"/>
        <files mask="dh_server.vcxproj"/>
        <files mask="dtls_client.vcxproj"/>
        <files mask="dtls_server.vcxproj"/>
        <files mask="ecdh_curve25519.vcxproj"/>
        <files mask="ecdsa.vcxproj"/>
        <files mask="gen_entropy.vcxproj"/>
        <files mask="gen_key.vcxproj"/>
        <files mask="gen_random_ctr_drbg.vcxproj"/>
        <files mask="gen_random_havege.vcxproj"/>
        <files mask="generic_sum.vcxproj"/>
        <files mask="hello.vcxproj"/>
        <files mask="key_app.vcxproj"/>
        <files mask="key_app_writer.vcxproj"/>
        <files mask="mbedTLS.sln"/>
        <files mask="mbedTLS.vcxproj"/>
        <files mask="mini_client.vcxproj"/>
        <files mask="mpi_demo.vcxproj"/>
        <files mask="pem2der.vcxproj"/>
        <files mask="pk_decrypt.vcxproj"/>
        <files mask="pk_encrypt.vcxproj"/>
        <files mask="pk_sign.vcxproj"/>
        <files mask="pk_verify.vcxproj"/>
        <files mask="req_app.vcxproj"/>
        <files mask="rsa_decrypt.vcxproj"/>
        <files mask="rsa_encrypt.vcxproj"/>
        <files mask="rsa_genkey.vcxproj"/>
        <files mask="rsa_sign.vcxproj"/>
        <files mask="rsa_sign_pss.vcxproj"/>
        <files mask="rsa_verify.vcxproj"/>
        <files mask="rsa_verify_pss.vcxproj"/>
        <files mask="selftest.vcxproj"/>
        <files mask="ssl_cert_test.vcxproj"/>
        <files mask="ssl_client1.vcxproj"/>
        <files mask="ssl_client2.vcxproj"/>
        <files mask="ssl_fork_server.vcxproj"/>
        <files mask="ssl_mail_client.vcxproj"/>
        <files mask="ssl_server.vcxproj"/>
        <files mask="ssl_server2.vcxproj"/>
        <files mask="strerror.vcxproj"/>
        <files mask="udp_proxy.vcxproj"/>
        <files mask="zeroize.vcxproj"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="other">
        <files mask="README.md"/>
        <files mask="module.json"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="script">
        <files mask="adjust-config.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="src">
        <files mask="entropy_hardware_poll.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="c_include">
        <files mask="target_config.h"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.LPC54608" name="common" version="2.2.11" full_name="SDMMC common stack" devices="LPC54608J512" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
    </component>
    <component id="middleware.sdmmc.mmc.LPC54608" name="mmc" version="2.2.11" full_name="SDMMC mmc stack" devices="LPC54608J512" dependency="middleware.sdmmc.common.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_mmc.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sd.LPC54608" name="sd" version="2.2.11" full_name="SDMMC sd stack" devices="LPC54608J512" dependency="middleware.sdmmc.common.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sd.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdifadaptor.freertos.LPC54608" name="adapter_freertos" version="2.2.11" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 platform.drivers.sdif.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/sdif/freertos" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdifadaptor.interrupt.LPC54608" name="adapter_interrupt" version="2.2.11" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 platform.drivers.sdif.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/sdif/interrupt" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdifadaptor.polling.LPC54608" name="adapter_polling" version="2.2.11" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 platform.drivers.sdif.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/sdif/polling" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdio.LPC54608" name="sdio" version="2.2.11" full_name="SDMMC sdio stack" devices="LPC54608J512" dependency="middleware.sdmmc.common.LPC54608" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdio.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sdio.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.LPC54608" name="lwIP" brief="lwIP" version="2.1.2" devices="LPC54608J512" dependency="middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware">
      <source path="middleware/lwip" target_path="lwip" type="doc">
        <files mask="CHANGELOG"/>
        <files mask="CMakeLists.txt"/>
        <files mask="COPYING"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="FEATURES"/>
        <files mask="FILES"/>
        <files mask="README"/>
        <files mask="UPGRADING"/>
      </source>
      <source path="middleware/lwip/doc" target_path="lwip/doc" type="doc">
        <files mask="FILES"/>
        <files mask="contrib.txt"/>
        <files mask="mdns.txt"/>
        <files mask="mqtt_client.txt"/>
        <files mask="ppp.txt"/>
        <files mask="savannah.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/doc" target_path="lwip/doc" type="doc">
        <files mask="NO_SYS_SampleCode.c"/>
        <files mask="ZeroCopyRx.c"/>
      </source>
      <source path="middleware/lwip/doc/doxygen" target_path="lwip/doc/doxygen" type="doc">
        <files mask="generate.bat"/>
        <files mask="generate.sh"/>
        <files mask="lwip.Doxyfile"/>
        <files mask="lwip.Doxyfile.cmake.in"/>
        <files mask="main_page.h"/>
      </source>
      <source path="middleware/lwip/doc/doxygen/output" target_path="lwip/doc/doxygen/output" type="doc">
        <files mask="index.html"/>
      </source>
      <source path="middleware/lwip/port/arch" target_path="lwip/port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source path="middleware/lwip/src" target_path="lwip/src" type="doc">
        <files mask="FILES"/>
      </source>
      <source path="middleware/lwip/src" target_path="lwip/src" type="other">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source path="middleware/lwip/src/api" target_path="lwip/src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source path="middleware/lwip/src/core" target_path="lwip/src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source path="middleware/lwip/src/core/ipv4" target_path="lwip/src/core/ipv4" type="src">
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source path="middleware/lwip/src/core/ipv6" target_path="lwip/src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/arpa" target_path="lwip/src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/net" target_path="lwip/src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix" target_path="lwip/src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/sys" target_path="lwip/src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/stdc" target_path="lwip/src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip" target_path="lwip/src/include/lwip" type="c_include">
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/priv" target_path="lwip/src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="mem_priv.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="tcpip_priv.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/prot" target_path="lwip/src/include/lwip/prot" type="c_include">
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif" target_path="lwip/src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif/ppp" target_path="lwip/src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif/ppp/polarssl" target_path="lwip/src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source path="middleware/lwip/src/netif" target_path="lwip/src/netif" type="doc">
        <files mask="FILES"/>
      </source>
      <source path="middleware/lwip/src/netif" target_path="lwip/src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source path="middleware/lwip/src/netif/ppp" target_path="lwip/src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP"/>
      </source>
      <source path="middleware/lwip/src/netif/ppp" target_path="lwip/src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="lwip_ecp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/netif/ppp/polarssl" target_path="lwip/src/netif/ppp/polarssl" type="doc">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/netif/ppp/polarssl" target_path="lwip/src/netif/ppp/polarssl" type="src">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <include_paths>
        <include_path path="lwip/port"/>
        <include_path path="lwip/src"/>
        <include_path path="lwip/src/include"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpd.LPC54608" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.tcpip.lwip.apps.httpd.support.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpd.support.LPC54608" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http/fs" target_path="lwip/src/apps/http/fs" type="other">
        <files mask="404.html"/>
        <files mask="index.html"/>
      </source>
      <source path="middleware/lwip/src/apps/http/fs/img" target_path="lwip/src/apps/http/fs/img" type="other">
        <files mask="sics.gif"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="fsdata.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="other">
        <files mask="makefsdata"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="src">
        <files mask="makefsdata.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="c_include">
        <files mask="tinydir.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpsrv.LPC54608" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/httpsrv" target_path="lwip/src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_fs_data.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv" target_path="lwip/src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv/mkfs" target_path="lwip/src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv/mkfs/webpage" target_path="lwip/src/apps/httpsrv/mkfs/webpage" type="other">
        <files mask="NXP_logo.png"/>
        <files mask="auth.html"/>
        <files mask="cgi.html"/>
        <files mask="favicon.ico"/>
        <files mask="httpsrv.css"/>
        <files mask="index.html"/>
        <files mask="poll.html"/>
        <files mask="request.js"/>
        <files mask="ssi.shtml"/>
        <files mask="websocket.html"/>
        <files mask="welcome.html"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.lwiperf.LPC54608" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/lwiperf" target_path="lwip/src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.mdns.LPC54608" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/mdns" target_path="lwip/src/apps/mdns" type="src">
        <files mask="mdns.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_priv.h"/>
      </source>
      <include_paths>
        <include_path path="lwip/src/include/lwip/apps"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.apps.mqtt.LPC54608" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/mqtt" target_path="lwip/src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.sntp.LPC54608" name="lwIP_SNTP" brief="lwIP SNTP" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/sntp" target_path="lwip/src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <include_paths>
        <include_path path="lwip/src/include"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.contrib.ping.LPC54608" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/ping" target_path="lwip/contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/ping" target_path="lwip/contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.tcpecho.LPC54608" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/tcpecho" target_path="lwip/contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/tcpecho" target_path="lwip/contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.tcpecho_raw.LPC54608" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.1.2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/tcpecho_raw" target_path="lwip/contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/tcpecho_raw" target_path="lwip/contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.udpecho.LPC54608" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/udpecho" target_path="lwip/contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/udpecho" target_path="lwip/contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.udpecho_raw.LPC54608" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/udpecho_raw" target_path="lwip/contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/udpecho_raw" target_path="lwip/contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif.LPC54608" name="lwIP_enet_ethernetif" brief="lwIP ENET Interface Porting Layer" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif.c"/>
      </source>
      <source path="middleware/lwip/port" target_path="lwip/port" type="c_include">
        <files mask="enet_ethernetif.h"/>
        <files mask="enet_ethernetif_priv.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif_kinetis.LPC54608" name="lwIP_enet_ethernetif_kinetis" brief="lwIP Kinetis ENET Interface Porting Layer" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.tcpip.lwip.enet_ethernetif.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif_lpc.LPC54608" name="lwIP_enet_ethernetif_lpc" brief="lwIP LPC ENET Interface Porting Layer" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.tcpip.lwip.enet_ethernetif.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif_lpc.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.unused_files.LPC54608" name="lwIP_unused_files" brief="lwIP files unused by projects" version="2.1.2" revision="2" devices="LPC54608J512" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source exclude="true" path="middleware/lwip/contrib/Coverity" target_path="lwip/contrib/Coverity" type="src">
        <files mask="coverity.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib" target_path="lwip/contrib" type="script">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="src">
        <files mask="ip6_route_table.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="c_include">
        <files mask="ip6_route_table.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/netconn/external_resolve" target_path="lwip/contrib/addons/netconn/external_resolve" type="src">
        <files mask="dnssd.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/netconn/external_resolve" target_path="lwip/contrib/addons/netconn/external_resolve" type="c_include">
        <files mask="dnssd.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_isn" target_path="lwip/contrib/addons/tcp_isn" type="src">
        <files mask="tcp_isn.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_isn" target_path="lwip/contrib/addons/tcp_isn" type="c_include">
        <files mask="tcp_isn.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="src">
        <files mask="tcp_md5.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="c_include">
        <files mask="tcp_md5.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/CCodeGeneration" target_path="lwip/contrib/apps/LwipMibCompiler/CCodeGeneration" type="other">
        <files mask="CCodeGeneration.csproj"/>
        <files mask="CFile.cs"/>
        <files mask="CGenerator.cs"/>
        <files mask="Code.cs"/>
        <files mask="CodeContainerBase.cs"/>
        <files mask="CodeElement.cs"/>
        <files mask="Comment.cs"/>
        <files mask="EmptyLine.cs"/>
        <files mask="Function.cs"/>
        <files mask="FunctionDeclaration.cs"/>
        <files mask="IfThenElse.cs"/>
        <files mask="PP_If.cs"/>
        <files mask="PP_Ifdef.cs"/>
        <files mask="PP_Include.cs"/>
        <files mask="PP_Macro.cs"/>
        <files mask="PlainText.cs"/>
        <files mask="Switch.cs"/>
        <files mask="VariableDeclaration.cs"/>
        <files mask="VariablePrototype.cs"/>
        <files mask="VariableType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/CCodeGeneration/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/CCodeGeneration/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler" target_path="lwip/contrib/apps/LwipMibCompiler" type="other">
        <files mask="LwipMibCompiler.sln"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler" target_path="lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler" type="other">
        <files mask="LwipMibCompiler.csproj"/>
        <files mask="Program.cs"/>
        <files mask="app.config"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration" target_path="lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration" type="other">
        <files mask="IRestriction.cs"/>
        <files mask="LwipSnmp.cs"/>
        <files mask="LwipSnmpCodeGeneration.csproj"/>
        <files mask="MibCFile.cs"/>
        <files mask="MibHeaderFile.cs"/>
        <files mask="SnmpMib.cs"/>
        <files mask="SnmpNode.cs"/>
        <files mask="SnmpScalarAggregationNode.cs"/>
        <files mask="SnmpScalarArrayNode.cs"/>
        <files mask="SnmpScalarNode.cs"/>
        <files mask="SnmpScalarNodeBits.cs"/>
        <files mask="SnmpScalarNodeCounter64.cs"/>
        <files mask="SnmpScalarNodeInt.cs"/>
        <files mask="SnmpScalarNodeObjectIdentifier.cs"/>
        <files mask="SnmpScalarNodeOctetString.cs"/>
        <files mask="SnmpScalarNodeTruthValue.cs"/>
        <files mask="SnmpScalarNodeUint.cs"/>
        <files mask="SnmpTableNode.cs"/>
        <files mask="SnmpTreeNode.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/MibViewer" target_path="lwip/contrib/apps/LwipMibCompiler/MibViewer" type="other">
        <files mask="FormMain.Designer.cs"/>
        <files mask="FormMain.cs"/>
        <files mask="FormMain.resx"/>
        <files mask="MibViewer.csproj"/>
        <files mask="Program.cs"/>
        <files mask="app.config"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/MibViewer/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/MibViewer/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
        <files mask="Resources.Designer.cs"/>
        <files mask="Resources.resx"/>
        <files mask="Settings.Designer.cs"/>
        <files mask="Settings.settings"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/Mibs" target_path="lwip/contrib/apps/LwipMibCompiler/Mibs" type="other">
        <files mask="IANA-ADDRESS-FAMILY-NUMBERS-MIB"/>
        <files mask="IANA-CHARSET-MIB"/>
        <files mask="IF-MIB"/>
        <files mask="INET-ADDRESS-MIB"/>
        <files mask="IP-MIB"/>
        <files mask="RFC-1212"/>
        <files mask="RFC-1215"/>
        <files mask="RFC1065-SMI"/>
        <files mask="RFC1155-SMI"/>
        <files mask="RFC1158-MIB"/>
        <files mask="RFC1213-MIB"/>
        <files mask="SNMPv2-CONF"/>
        <files mask="SNMPv2-MIB"/>
        <files mask="SNMPv2-SMI"/>
        <files mask="SNMPv2-TC"/>
        <files mask="SNMPv2-TM"/>
        <files mask="TCP-MIB"/>
        <files mask="UDP-MIB"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/Mibs/IANA" target_path="lwip/contrib/apps/LwipMibCompiler/Mibs/IANA" type="other">
        <files mask="IANA-ITU-ALARM-TC-MIB"/>
        <files mask="IANA-LANGUAGE-MIB"/>
        <files mask="IANA-MALLOC-MIB"/>
        <files mask="IANA-MAU-MIB"/>
        <files mask="IANA-PRINTER-MIB"/>
        <files mask="IANA-RTPROTO-MIB"/>
        <files mask="IANATn3270eTC-MIB"/>
        <files mask="IANAifType-MIB"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib" type="other">
        <files mask="DisplayHint.cs"/>
        <files mask="IModule.cs"/>
        <files mask="ISymbolEnumerator.cs"/>
        <files mask="Lexer.cs"/>
        <files mask="MaxAccess.cs"/>
        <files mask="MibDocument.cs"/>
        <files mask="MibException.cs"/>
        <files mask="MibModule.cs"/>
        <files mask="MibResolver.cs"/>
        <files mask="MibTree.cs"/>
        <files mask="MibTreeNode.cs"/>
        <files mask="MibTypesResolver.cs"/>
        <files mask="ObjectIdentifier.cs"/>
        <files mask="Status.cs"/>
        <files mask="Symbol.cs"/>
        <files mask="SymbolList.cs"/>
        <files mask="ValueMap.cs"/>
        <files mask="ValueRange.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Entities" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Entities" type="other">
        <files mask="AgentCapabilities.cs"/>
        <files mask="EntityBase.cs"/>
        <files mask="IEntity.cs"/>
        <files mask="ModuleCompliance.cs"/>
        <files mask="ModuleIdentity.cs"/>
        <files mask="NotificationGroup.cs"/>
        <files mask="NotificationType.cs"/>
        <files mask="ObjectGroup.cs"/>
        <files mask="ObjectIdentity.cs"/>
        <files mask="ObjectType.cs"/>
        <files mask="OidValueAssignment.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements" type="other">
        <files mask="Exports.cs"/>
        <files mask="IDeclaration.cs"/>
        <files mask="IElement.cs"/>
        <files mask="ITypeReferrer.cs"/>
        <files mask="Imports.cs"/>
        <files mask="ImportsFrom.cs"/>
        <files mask="TrapType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Types" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Types" type="other">
        <files mask="BaseType.cs"/>
        <files mask="BitsType.cs"/>
        <files mask="Choice.cs"/>
        <files mask="ITypeAssignment.cs"/>
        <files mask="IntegerType.cs"/>
        <files mask="IpAddressType.cs"/>
        <files mask="Macro.cs"/>
        <files mask="ObjectIdentifierType.cs"/>
        <files mask="OctetStringType.cs"/>
        <files mask="OpaqueType.cs"/>
        <files mask="Sequence.cs"/>
        <files mask="SequenceOf.cs"/>
        <files mask="TextualConvention.cs"/>
        <files mask="TypeAssignment.cs"/>
        <files mask="UnsignedType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
        <files mask="Resources.Designer.cs"/>
        <files mask="Resources.resx"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" type="other">
        <files mask="SharpSnmpLib.Mib.csproj"/>
        <files mask="sharpsnmplib.snk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" type="doc">
        <files mask="license.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/example" target_path="lwip/contrib/apps/LwipMibCompiler/example" type="script">
        <files mask="compile_udp_mib.cmd"/>
        <files mask="compile_udp_mib.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="src">
        <files mask="chargen.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="c_include">
        <files mask="chargen.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="src">
        <files mask="httpserver-netconn.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="c_include">
        <files mask="httpserver-netconn.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/netio" target_path="lwip/contrib/apps/netio" type="src">
        <files mask="netio.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/netio" target_path="lwip/contrib/apps/netio" type="c_include">
        <files mask="netio.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/rtp" target_path="lwip/contrib/apps/rtp" type="src">
        <files mask="rtp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/rtp" target_path="lwip/contrib/apps/rtp" type="c_include">
        <files mask="rtp.h"/>
        <files mask="rtpdata.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/shell" target_path="lwip/contrib/apps/shell" type="src">
        <files mask="shell.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/shell" target_path="lwip/contrib/apps/shell" type="c_include">
        <files mask="shell.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/socket_examples" target_path="lwip/contrib/apps/socket_examples" type="src">
        <files mask="socket_examples.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/socket_examples" target_path="lwip/contrib/apps/socket_examples" type="c_include">
        <files mask="socket_examples.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ethernetif" target_path="lwip/contrib/examples/ethernetif" type="src">
        <files mask="ethernetif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="c_include">
        <files mask="default_netif.h"/>
        <files mask="lwipopts.h"/>
        <files mask="lwippools.h"/>
        <files mask="ppp_settings.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="other">
        <files mask="lwipcfg.h.example"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="src">
        <files mask="test.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app/test_configs" target_path="lwip/contrib/examples/example_app/test_configs" type="c_include">
        <files mask="opt_default.h"/>
        <files mask="opt_dualstack.h"/>
        <files mask="opt_ipv4only.h"/>
        <files mask="opt_ipv6only.h"/>
        <files mask="opt_no_tcp_dualstack.h"/>
        <files mask="opt_no_tcp_ipv4only.h"/>
        <files mask="opt_no_tcp_ipv6only.h"/>
        <files mask="opt_no_udp_dualstack.h"/>
        <files mask="opt_no_udp_ipv4only.h"/>
        <files mask="opt_no_udp_ipv6only.h"/>
        <files mask="opt_none.h"/>
        <files mask="opt_nosys_dual.h"/>
        <files mask="opt_nosys_ipv4.h"/>
        <files mask="opt_nosys_ipv6.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/cgi_example" target_path="lwip/contrib/examples/httpd/cgi_example" type="src">
        <files mask="cgi_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/cgi_example" target_path="lwip/contrib/examples/httpd/cgi_example" type="c_include">
        <files mask="cgi_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs" target_path="lwip/contrib/examples/httpd/examples_fs" type="doc">
        <files mask="404.html"/>
        <files mask="index.html"/>
        <files mask="login.html"/>
        <files mask="loginfail.html"/>
        <files mask="session.html"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs/img" target_path="lwip/contrib/examples/httpd/examples_fs/img" type="image">
        <files mask="sics.gif"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs" target_path="lwip/contrib/examples/httpd/examples_fs" type="other">
        <files mask="ssi.shtml"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd" target_path="lwip/contrib/examples/httpd" type="src">
        <files mask="examples_fsdata.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/fs_example" target_path="lwip/contrib/examples/httpd/fs_example" type="src">
        <files mask="fs_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/fs_example" target_path="lwip/contrib/examples/httpd/fs_example" type="c_include">
        <files mask="fs_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/genfiles_example" target_path="lwip/contrib/examples/httpd/genfiles_example" type="src">
        <files mask="genfiles_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/genfiles_example" target_path="lwip/contrib/examples/httpd/genfiles_example" type="c_include">
        <files mask="genfiles_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/post_example" target_path="lwip/contrib/examples/httpd/post_example" type="src">
        <files mask="post_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/ssi_example" target_path="lwip/contrib/examples/httpd/ssi_example" type="src">
        <files mask="ssi_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/ssi_example" target_path="lwip/contrib/examples/httpd/ssi_example" type="c_include">
        <files mask="ssi_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/lwiperf" target_path="lwip/contrib/examples/lwiperf" type="src">
        <files mask="lwiperf_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/lwiperf" target_path="lwip/contrib/examples/lwiperf" type="c_include">
        <files mask="lwiperf_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mdns" target_path="lwip/contrib/examples/mdns" type="src">
        <files mask="mdns_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mdns" target_path="lwip/contrib/examples/mdns" type="c_include">
        <files mask="mdns_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mqtt" target_path="lwip/contrib/examples/mqtt" type="src">
        <files mask="mqtt_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mqtt" target_path="lwip/contrib/examples/mqtt" type="c_include">
        <files mask="mqtt_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ppp" target_path="lwip/contrib/examples/ppp" type="src">
        <files mask="pppos_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ppp" target_path="lwip/contrib/examples/ppp" type="c_include">
        <files mask="pppos_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp" target_path="lwip/contrib/examples/snmp" type="src">
        <files mask="snmp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp" target_path="lwip/contrib/examples/snmp" type="c_include">
        <files mask="snmp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_private_mib" target_path="lwip/contrib/examples/snmp/snmp_private_mib" type="src">
        <files mask="lwip_prvmib.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_private_mib" target_path="lwip/contrib/examples/snmp/snmp_private_mib" type="c_include">
        <files mask="private_mib.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_v3" target_path="lwip/contrib/examples/snmp/snmp_v3" type="src">
        <files mask="snmpv3_dummy.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_v3" target_path="lwip/contrib/examples/snmp/snmp_v3" type="c_include">
        <files mask="snmpv3_dummy.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/sntp" target_path="lwip/contrib/examples/sntp" type="src">
        <files mask="sntp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/sntp" target_path="lwip/contrib/examples/sntp" type="c_include">
        <files mask="sntp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/tftp" target_path="lwip/contrib/examples/tftp" type="src">
        <files mask="tftp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/tftp" target_path="lwip/contrib/examples/tftp" type="c_include">
        <files mask="tftp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports" target_path="lwip/contrib/ports" type="script">
        <files mask="CMakeCommon.cmake"/>
        <files mask="Common.allports.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports" target_path="lwip/contrib/ports" type="other">
        <files mask="FILES"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/freertos/include/arch" target_path="lwip/contrib/ports/freertos/include/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/freertos" target_path="lwip/contrib/ports/freertos" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix" target_path="lwip/contrib/ports/unix" type="script">
        <files mask="Common.mk"/>
        <files mask="Filelists.cmake"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix" target_path="lwip/contrib/ports/unix" type="other">
        <files mask="README"/>
        <files mask="setup-tapif"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="other">
        <files mask="Makefile"/>
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="c_include">
        <files mask="config.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="src">
        <files mask="default_netif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="script">
        <files mask="iteropts.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/include/arch" target_path="lwip/contrib/ports/unix/port/include/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/include/netif" target_path="lwip/contrib/ports/unix/port/include/netif" type="c_include">
        <files mask="fifo.h"/>
        <files mask="list.h"/>
        <files mask="pcapif.h"/>
        <files mask="sio.h"/>
        <files mask="tapif.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/netif" target_path="lwip/contrib/ports/unix/port/netif" type="src">
        <files mask="fifo.c"/>
        <files mask="list.c"/>
        <files mask="pcapif.c"/>
        <files mask="sio.c"/>
        <files mask="tapif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port" target_path="lwip/contrib/ports/unix/port" type="src">
        <files mask="perf.c"/>
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="script">
        <files mask="Common.mk"/>
        <files mask="Filelists.cmake"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check" target_path="lwip/contrib/ports/win32/check" type="c_include">
        <files mask="check_stdint.h"/>
        <files mask="config.h"/>
        <files mask="stdbool.h"/>
        <files mask="unistd.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check/sys" target_path="lwip/contrib/ports/win32/check/sys" type="c_include">
        <files mask="time.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check" target_path="lwip/contrib/ports/win32/check" type="src">
        <files mask="time.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="src">
        <files mask="default_netif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/include/arch" target_path="lwip/contrib/ports/win32/include/arch" type="c_include">
        <files mask="bpstruct.h"/>
        <files mask="cc.h"/>
        <files mask="epstruct.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/msvc" target_path="lwip/contrib/ports/win32/msvc" type="script">
        <files mask="build_coverity.cmd"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/msvc" target_path="lwip/contrib/ports/win32/msvc" type="other">
        <files mask="libcheck.vcxproj"/>
        <files mask="libcheck.vcxproj.filters"/>
        <files mask="lwIP.vcxproj"/>
        <files mask="lwIP.vcxproj.filters"/>
        <files mask="lwIP_Test.sln"/>
        <files mask="lwIP_Test.vcxproj"/>
        <files mask="lwIP_Test.vcxproj.filters"/>
        <files mask="lwIP_pcapif.vcxproj"/>
        <files mask="lwIP_pcapif.vcxproj.filters"/>
        <files mask="lwIP_unittests.sln"/>
        <files mask="lwip_unittests.vcxproj"/>
        <files mask="lwip_unittests.vcxproj.filters"/>
        <files mask="makefsdata.vcxproj"/>
        <files mask="makefsdata.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="src">
        <files mask="pcapif.c"/>
        <files mask="pcapif_helper.c"/>
        <files mask="sio.c"/>
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="c_include">
        <files mask="pcapif.h"/>
        <files mask="pcapif_helper.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/altcp_tls" target_path="lwip/src/apps/altcp_tls" type="src">
        <files mask="altcp_tls_mbedtls.c"/>
        <files mask="altcp_tls_mbedtls_mem.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/altcp_tls" target_path="lwip/src/apps/altcp_tls" type="c_include">
        <files mask="altcp_tls_mbedtls_mem.h"/>
        <files mask="altcp_tls_mbedtls_structs.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="altcp_proxyconnect.c"/>
        <files mask="http_client.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/netbiosns" target_path="lwip/src/apps/netbiosns" type="src">
        <files mask="netbiosns.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/smtp" target_path="lwip/src/apps/smtp" type="src">
        <files mask="smtp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/snmp" target_path="lwip/src/apps/snmp" type="src">
        <files mask="snmp_asn1.c"/>
        <files mask="snmp_core.c"/>
        <files mask="snmp_mib2.c"/>
        <files mask="snmp_mib2_icmp.c"/>
        <files mask="snmp_mib2_interfaces.c"/>
        <files mask="snmp_mib2_ip.c"/>
        <files mask="snmp_mib2_snmp.c"/>
        <files mask="snmp_mib2_system.c"/>
        <files mask="snmp_mib2_tcp.c"/>
        <files mask="snmp_mib2_udp.c"/>
        <files mask="snmp_msg.c"/>
        <files mask="snmp_netconn.c"/>
        <files mask="snmp_pbuf_stream.c"/>
        <files mask="snmp_raw.c"/>
        <files mask="snmp_scalar.c"/>
        <files mask="snmp_snmpv2_framework.c"/>
        <files mask="snmp_snmpv2_usm.c"/>
        <files mask="snmp_table.c"/>
        <files mask="snmp_threadsync.c"/>
        <files mask="snmp_traps.c"/>
        <files mask="snmpv3.c"/>
        <files mask="snmpv3_mbedtls.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/snmp" target_path="lwip/src/apps/snmp" type="c_include">
        <files mask="snmp_asn1.h"/>
        <files mask="snmp_core_priv.h"/>
        <files mask="snmp_msg.h"/>
        <files mask="snmp_pbuf_stream.h"/>
        <files mask="snmpv3_priv.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/tftp" target_path="lwip/src/apps/tftp" type="src">
        <files mask="tftp_server.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="other">
        <files mask="FILES"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="altcp_proxyconnect.h"/>
        <files mask="altcp_tls_mbedtls_opts.h"/>
        <files mask="http_client.h"/>
        <files mask="netbiosns.h"/>
        <files mask="netbiosns_opts.h"/>
        <files mask="smtp.h"/>
        <files mask="smtp_opts.h"/>
        <files mask="snmp.h"/>
        <files mask="snmp_core.h"/>
        <files mask="snmp_mib2.h"/>
        <files mask="snmp_opts.h"/>
        <files mask="snmp_scalar.h"/>
        <files mask="snmp_snmpv2_framework.h"/>
        <files mask="snmp_snmpv2_usm.h"/>
        <files mask="snmp_table.h"/>
        <files mask="snmp_threadsync.h"/>
        <files mask="snmpv3.h"/>
        <files mask="tftp_opts.h"/>
        <files mask="tftp_server.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip" target_path="lwip/src/include/lwip" type="other">
        <files mask="init.h.cmake.in"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="other">
        <files mask="Makefile"/>
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="c_include">
        <files mask="config.h"/>
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="src">
        <files mask="fuzz.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/arp" target_path="lwip/test/fuzz/inputs/arp" type="binary">
        <files mask="arp_req.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/icmp" target_path="lwip/test/fuzz/inputs/icmp" type="binary">
        <files mask="icmp_ping.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/ipv6" target_path="lwip/test/fuzz/inputs/ipv6" type="binary">
        <files mask="neighbor_solicitation.bin"/>
        <files mask="router_adv.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/tcp" target_path="lwip/test/fuzz/inputs/tcp" type="binary">
        <files mask="tcp_syn.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/udp" target_path="lwip/test/fuzz/inputs/udp" type="binary">
        <files mask="udp_port_5000.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="script">
        <files mask="output_to_pcap.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/sockets" target_path="lwip/test/unit" type="src">
        <files mask="sockets_stresstest.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/sockets" target_path="lwip/test/unit" type="c_include">
        <files mask="sockets_stresstest.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="script">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/api" target_path="lwip/test/unit/api" type="src">
        <files mask="test_sockets.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/api" target_path="lwip/test/unit/api" type="c_include">
        <files mask="test_sockets.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/arch" target_path="lwip/test/unit/arch" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/arch" target_path="lwip/test/unit/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/core" target_path="lwip/test/unit/core" type="src">
        <files mask="test_def.c"/>
        <files mask="test_mem.c"/>
        <files mask="test_netif.c"/>
        <files mask="test_pbuf.c"/>
        <files mask="test_timers.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/core" target_path="lwip/test/unit/core" type="c_include">
        <files mask="test_def.h"/>
        <files mask="test_mem.h"/>
        <files mask="test_netif.h"/>
        <files mask="test_pbuf.h"/>
        <files mask="test_timers.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/dhcp" target_path="lwip/test/unit/dhcp" type="src">
        <files mask="test_dhcp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/dhcp" target_path="lwip/test/unit/dhcp" type="c_include">
        <files mask="test_dhcp.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/etharp" target_path="lwip/test/unit/etharp" type="src">
        <files mask="test_etharp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/etharp" target_path="lwip/test/unit/etharp" type="c_include">
        <files mask="test_etharp.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip4" target_path="lwip/test/unit/ip4" type="src">
        <files mask="test_ip4.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip4" target_path="lwip/test/unit/ip4" type="c_include">
        <files mask="test_ip4.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip6" target_path="lwip/test/unit/ip6" type="src">
        <files mask="test_ip6.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip6" target_path="lwip/test/unit/ip6" type="c_include">
        <files mask="test_ip6.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="c_include">
        <files mask="lwip_check.h"/>
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="src">
        <files mask="lwip_unittests.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mdns" target_path="lwip/test/unit/mdns" type="src">
        <files mask="test_mdns.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mdns" target_path="lwip/test/unit/mdns" type="c_include">
        <files mask="test_mdns.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mqtt" target_path="lwip/test/unit/mqtt" type="src">
        <files mask="test_mqtt.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mqtt" target_path="lwip/test/unit/mqtt" type="c_include">
        <files mask="test_mqtt.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/tcp" target_path="lwip/test/unit/tcp" type="src">
        <files mask="tcp_helper.c"/>
        <files mask="test_tcp.c"/>
        <files mask="test_tcp_oos.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/tcp" target_path="lwip/test/unit/tcp" type="c_include">
        <files mask="tcp_helper.h"/>
        <files mask="test_tcp.h"/>
        <files mask="test_tcp_oos.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/udp" target_path="lwip/test/unit/udp" type="src">
        <files mask="test_udp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/udp" target_path="lwip/test/unit/udp" type="c_include">
        <files mask="test_udp.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.usb_ethernetif.LPC54608" name="lwIP_usb_ethernetif" brief="lwIP Ethernet Interface Porting Layer" version="2.1.2" revision="2" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608 middleware.template_application.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
    </component>
    <component id="middleware.template_application.amazon_freertos.LPC54608" name="Amazon-FreeRTOS" brief="FreeRTOS template application" version="10.2.0" full_name="FreeRTOS template" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608" category="Operating System/FreeRTOS Operating System" user_visible="true" type="project_template">
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source path="rtos/amazon-freertos/template_application/ARM_CM4F" target_path="source" type="c_include" device_cores="core0_LPC54608J512">
        <files mask="FreeRTOSConfig.h"/>
      </source>
    </component>
    <component id="middleware.template_application.emwin.LPC54608" name="emwin_template" brief="emwin template" version="1.0.0" full_name="emwin template application" devices="LPC54608J512" dependency="middleware.emwin.LPC54608" category="Graphics/emWin graphics library" user_visible="false" type="project_template">
      <source path="middleware/emwin/template_application" target_path="emwin" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source path="middleware/emwin/template_application" target_path="emwin" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
    </component>
    <component id="middleware.template_application.mbedtls.LPC54608" name="mbedtls" brief="mbedtls template" version="2.13.1" full_name="mbedtls template application" devices="LPC54608J512" dependency="middleware.mbedtls.LPC54608" category="Security/mbedTLS library" user_visible="true" type="middleware"/>
    <component id="middleware.template_application.tcpip.lwip.LPC54608" name="lwIP_template" brief="lwIP Template" version="2.1.2" revision="2" full_name="lwIP Template Application" devices="LPC54608J512" dependency="middleware.tcpip.lwip.LPC54608" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template">
      <source path="middleware/lwip/template_application" target_path="board" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source path="middleware/lwip/template_application" target_path="board" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source path="middleware/lwip/template_application" target_path="source" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
    </component>
    <component id="middleware.usb.device.LPC54608" name="common driver" version="1.0.0" full_name="USB stack" devices="LPC54608J512" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_ip3511fs.LPC54608" name="ip3511fs driver(FS)" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.device.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_ip3511hs.LPC54608" name="ip3511hs driver(HS)" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.device.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.LPC54608" name="USB device config template" brief="USB device config template" version="2.2.0" full_name="USB device config template" devices="LPC54608J512" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_stack.LPC54608" name="USB device" brief="USB device stack" version="2.2.0" full_name="USB device stack" devices="LPC54608J512" dependency="middleware.usb.device_config_template.LPC54608 middleware.usb.stack_common.LPC54608" user_visible="true" type="middleware">
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="src">
        <files mask="usb_device_audio.c"/>
        <files mask="usb_device_ccid.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_cdc_rndis.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_hid.c"/>
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
        <files mask="usb_device_phdc.c"/>
        <files mask="usb_device_printer.c"/>
        <files mask="usb_device_video.c"/>
      </source>
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
        <files mask="usb_device_ccid.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_cdc_rndis.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_hid.h"/>
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
        <files mask="usb_device_phdc.h"/>
        <files mask="usb_device_printer.h"/>
        <files mask="usb_device_video.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_audio.LPC54608" name="Audio class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc.LPC54608" name="CDC class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc_rndis.LPC54608" name="CDC RNDIS class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
    </component>
    <component id="middleware.usb.host.LPC54608" name="common driver" version="1.0.0" full_name="USB stack" devices="LPC54608J512" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
      </source>
    </component>
    <component id="middleware.usb.host_hid.LPC54608" name="Hid class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_hub.LPC54608" name="Hub class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_controller_ip3516hs.LPC54608" name="IP3516HS driver(HS)" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_ip3516hs.c"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host_ip3516hs.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_msd.LPC54608" name="Mass Storage class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_controller_ohci.LPC54608" name="OHCI driver(FS)" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_ohci.c"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host_ohci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_phdc.LPC54608" name="PHDC class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_printer.LPC54608" name="Printer class" version="1.0.0" full_name="USB stack" devices="LPC54608J512" dependency="middleware.usb.host.LPC54608" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_config_template.LPC54608" name="USB host config template" brief="USB host config template" version="2.2.0" full_name="USB host config template" devices="LPC54608J512" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_stack.LPC54608" name="USB host" brief="USB host stack" version="2.2.0" full_name="USB host stack" devices="LPC54608J512" dependency="middleware.usb.host_config_template.LPC54608 middleware.usb.stack_common.LPC54608" user_visible="true" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
        <files mask="usb_host_cdc.c"/>
        <files mask="usb_host_hid.c"/>
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
        <files mask="usb_host_phdc.c"/>
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
        <files mask="usb_host_cdc.h"/>
        <files mask="usb_host_hid.h"/>
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
        <files mask="usb_host_msd.h"/>
        <files mask="usb_host_phdc.h"/>
        <files mask="usb_host_printer.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_ehci.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_ip3516hs.h"/>
        <files mask="usb_host_khci.h"/>
        <files mask="usb_host_ohci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_ehci.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_ip3516hs.c"/>
        <files mask="usb_host_khci.c"/>
        <files mask="usb_host_ohci.c"/>
      </source>
    </component>
    <component id="middleware.usb.stack_common.LPC54608" name="USB common" brief="USB common" version="2.2.0" full_name="USB common" devices="LPC54608J512" user_visible="true" type="middleware">
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.LPC54608" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.LPC54608" name="wifi_qca" version="2.0.0" revision="1" full_name="QCA400x WiFi" devices="LPC54608J512" category="WiFi/QCA400x WiFi" user_visible="true" type="middleware">
      <source path="middleware/wifi_qca" target_path="wifi_qca/include" type="c_include">
        <files mask="atheros_stack_offload.h"/>
        <files mask="atheros_wifi.h"/>
        <files mask="atheros_wifi_api.h"/>
        <files mask="atheros_wifi_internal.h"/>
        <files mask="qcom_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/api_interface" target_path="wifi_qca/common_src/api_interface" type="src">
        <files mask="api_init.c"/>
        <files mask="api_ioctl.c"/>
        <files mask="api_txrx.c"/>
        <files mask="api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/bmi" target_path="wifi_qca/common_src/bmi" type="src">
        <files mask="bmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/driver" target_path="wifi_qca/common_src/driver" type="src">
        <files mask="driver_diag.c"/>
        <files mask="driver_init.c"/>
        <files mask="driver_main.c"/>
        <files mask="driver_netbuf.c"/>
        <files mask="driver_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/hcd" type="c_include">
        <files mask="hcd_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/htc" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="htc.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hw_interface" target_path="wifi_qca/common_src/hw_interface" type="src">
        <files mask="hw_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/include" target_path="wifi_qca/common_src/include" type="c_include">
        <files mask="a_debug.h"/>
        <files mask="a_drv.h"/>
        <files mask="a_drv_api.h"/>
        <files mask="aggr_recv_api.h"/>
        <files mask="bmi.h"/>
        <files mask="common_api.h"/>
        <files mask="dbglog_api.h"/>
        <files mask="driver_cxt.h"/>
        <files mask="dset.h"/>
        <files mask="dset_api.h"/>
        <files mask="hif_internal.h"/>
        <files mask="htc_api.h"/>
        <files mask="ieee80211.h"/>
        <files mask="netbuf.h"/>
        <files mask="spi_hcd_if.h"/>
        <files mask="wlan_api.h"/>
        <files mask="wmi_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/qapi" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="qcom_api.c"/>
        <files mask="qcom_dns.c"/>
        <files mask="qcom_legacy.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/reorder" target_path="wifi_qca/common_src/reorder" type="src">
        <files mask="rcv_aggr.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="api_stack_offload.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/stack_common" type="c_include">
        <files mask="common_stack_offload.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/storerecall" type="src">
        <files mask="dset.c"/>
        <files mask="storerecall.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/stack_common" type="src">
        <files mask="dset_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/util" target_path="wifi_qca/common_src/util" type="src">
        <files mask="util.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="src">
        <files mask="wmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="c_include">
        <files mask="wmi_host.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/api_interface" target_path="wifi_qca/custom_src/api_interface" type="src">
        <files mask="cust_api_init.c"/>
        <files mask="cust_api_ioctl.c"/>
        <files mask="cust_api_txrx.c"/>
        <files mask="cust_api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/driver" target_path="wifi_qca/custom_src/driver" type="src">
        <files mask="cust_driver_main.c"/>
        <files mask="cust_driver_netbuf.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/hw_interface" target_path="wifi_qca/custom_src/hw_interface" type="src">
        <files mask="cust_spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/include" target_path="wifi_qca/custom_src/include" type="c_include">
        <files mask="a_config.h"/>
        <files mask="a_osapi.h"/>
        <files mask="a_types.h"/>
        <files mask="cust_netbuf.h"/>
        <files mask="custom_wlan_api.h"/>
        <files mask="wlan_config.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/qapi" target_path="wifi_qca/custom_src/qapi" type="src">
        <files mask="custom_qcom_api.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="src">
        <files mask="cust_api_stack_offload.c"/>
        <files mask="cust_api_stack_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="c_include">
        <files mask="custom_stack_offload.h"/>
        <files mask="qca_structs.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002" target_path="wifi_qca/include/AR6002" type="c_include">
        <files mask="AR6K_version.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw2.0/hw" target_path="wifi_qca/include/AR6002/hw2.0/hw" type="c_include">
        <files mask="hw20_apb_map.h"/>
        <files mask="hw20_gpio_reg.h"/>
        <files mask="hw20_mbox_host_reg.h"/>
        <files mask="hw20_mbox_reg.h"/>
        <files mask="hw20_rtc_reg.h"/>
        <files mask="hw20_si_reg.h"/>
        <files mask="hw20_uart_reg.h"/>
        <files mask="hw20_vmc_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw4.0/hw" target_path="wifi_qca/include/AR6002/hw4.0/hw" type="c_include">
        <files mask="hw40_rtc_reg.h"/>
        <files mask="hw40_rtc_wlan_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include" target_path="wifi_qca/include" type="c_include">
        <files mask="athdefs.h"/>
        <files mask="bmi_msg.h"/>
        <files mask="dbglog.h"/>
        <files mask="dbglog_id.h"/>
        <files mask="htc.h"/>
        <files mask="htc_services.h"/>
        <files mask="p2p.h"/>
        <files mask="pkt_log.h"/>
        <files mask="pmu.h"/>
        <files mask="targaddrs.h"/>
        <files mask="wlan_defs.h"/>
        <files mask="wmi.h"/>
      </source>
      <source path="middleware/wifi_qca/port" target_path="wifi_qca/port" type="c_include">
        <files mask="wifi_common.h"/>
        <files mask="wifi_shield_common.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.LPC54608" name="freertos" version="1.0.0" devices="LPC54608J512" dependency="middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.wifi_qca.LPC54608" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="src">
        <files mask="wifi_env.c"/>
      </source>
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="c_include">
        <files mask="wifi_env.h"/>
        <files mask="wifi_env_port.h"/>
        <files mask="wifi_port.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.drivers.flexcomm.LPC54608" name="flexcomm_lpc_dma" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.wifi_qca.LPC54608 middleware.wifi_qca.freertos.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_spi_dma.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/drivers/flexcomm_freertos" target_path="wifi_qca/port/drivers/flexcomm_freertos" type="src">
        <files mask="wifi_spi.c"/>
      </source>
      <source path="middleware/wifi_qca/port/drivers/flexcomm_freertos" target_path="wifi_qca/port/drivers/flexcomm_freertos" type="c_include">
        <files mask="wifi_spi.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.lpcxpresso54608.freertos.shields.LPC54608" name="shields" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.wifi_qca.LPC54608 middleware.wifi_qca.freertos.LPC54608 middleware.wifi_qca.freertos.drivers.flexcomm.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_spi_dma.LPC54608 platform.drivers.inputmux.LPC54608 platform.drivers.inputmux_connections.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.pint.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/lpcxpresso54608/freertos" target_path="wifi_qca/port/shields" type="src">
        <files mask="wifi_shield.c"/>
      </source>
      <source path="middleware/wifi_qca/port/boards/lpcxpresso54608/freertos" target_path="wifi_qca/port/shields" type="c_include">
        <files mask="wifi_shield.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.lpcxpresso54608.freertos.shields.gt202.LPC54608" name="gt202" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 middleware.amazon_freertos.freertos.LPC54608 middleware.template_application.amazon_freertos.LPC54608 middleware.wifi_qca.LPC54608 middleware.wifi_qca.freertos.LPC54608 middleware.wifi_qca.freertos.drivers.flexcomm.LPC54608 middleware.wifi_qca.lpcxpresso54608.freertos.shields.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.flexcomm.LPC54608 platform.drivers.flexcomm_spi.LPC54608 platform.drivers.flexcomm_spi_dma.LPC54608 platform.drivers.inputmux.LPC54608 platform.drivers.inputmux_connections.LPC54608 platform.drivers.lpc_dma.LPC54608 platform.drivers.pint.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/lpcxpresso54608/freertos/gt202" target_path="wifi_qca/port/shields/gt202" type="c_include">
        <files mask="wifi_shield_gt202.h"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.LPC54608" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="LPC54608J512" user_visible="true" type="utilities"/>
    <component id="platform.utilities.assert.LPC54608" name="assert" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 utility.debug_console.LPC54608" user_visible="true" type="utilities">
      <source path="devices/LPC54608/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.LPC54608" name="debug_console" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="utilities">
      <source path="devices/LPC54608/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/LPC54608/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/LPC54608/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/LPC54608/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.LPC54608" name="notifier" version="1.0.0" devices="LPC54608J512" dependency="device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608" user_visible="true" type="utilities">
      <source path="devices/LPC54608/utilities" target_path="utilities/utilities" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source path="devices/LPC54608/utilities" target_path="utilities/utilities" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
    </component>
    <component id="utility.shell.LPC54608" name="shell" version="1.0.0" devices="LPC54608J512" dependency="component.lists.LPC54608 component.serial_manager.LPC54608 device.LPC54608_CMSIS.LPC54608 platform.Include_common.LPC54608 platform.Include_core_cm4.LPC54608 platform.drivers.clock.LPC54608 platform.drivers.common.LPC54608 platform.drivers.power.LPC54608 platform.drivers.reset.LPC54608 utility.debug_console.LPC54608" user_visible="true" type="utilities">
      <source path="devices/LPC54608/utilities" target_path="utilities" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source path="devices/LPC54608/utilities" target_path="utilities" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
